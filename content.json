{"meta":{"title":"LeoZhang's Blog","subtitle":"Hear all parties!","description":"Working Hard.","author":"LeoZhang","url":"https://zealoussnow.github.io"},"pages":[{"title":"404 Not Found： 您要的页面不存在","date":"2016-04-28T03:46:01.000Z","updated":"2016-04-29T08:58:10.621Z","comments":false,"path":"/404.html","permalink":"https://zealoussnow.github.io//404.html","excerpt":"","keywords":null,"text":".article-header { padding: 0; padding-top: 26px; border-left: none; text-align: center; } .article-header:hover { border-left: none; } .article-title { font-size: 2.1em; } strong a { color: #747474; } .article-meta { display: none; } .share { display: none; } .ds-meta { display: none; } .player { margin-left: -10px; } .sign { text-align: right; font-style: italic; } #page-visit { display: none; } .center { text-align: center; height: 2.5em; font-weight: bold; } .article-entry hr { margin: 0; } .pic { text-align: center; margin: 0; } .pic br { display: none; } #container .article-info-post.article-info { display: none; } #container .article .article-title { padding: 0; }","raw":null,"content":null},{"title":"关于我","date":"2016-04-28T05:25:03.000Z","updated":"2016-04-28T09:33:17.806Z","comments":true,"path":"about/index.html","permalink":"https://zealoussnow.github.io/about/index.html","excerpt":"","keywords":null,"text":"","raw":null,"content":null},{"title":"分类 & 标签","date":"2016-04-29T01:43:12.000Z","updated":"2016-04-29T03:13:44.901Z","comments":true,"path":"tags/index.html","permalink":"https://zealoussnow.github.io/tags/index.html","excerpt":"","keywords":null,"text":"","raw":null,"content":null}],"posts":[{"title":"String in C and C++","slug":"string-c-cpp","date":"2016-05-06T02:22:45.000Z","updated":"2016-05-06T03:30:46.297Z","comments":true,"path":"2016/05/06/string-c-cpp/","link":"","permalink":"https://zealoussnow.github.io/2016/05/06/string-c-cpp/","excerpt":"This page summarizes many of the things you may find it useful to know when working with either C-strings or objects of the C++ string class.","keywords":null,"text":"This page summarizes many of the things you may find it useful to know when working with either C-strings or objects of the C++ string class. The term string generally means an ordered sequence of characters, with a first character, a second character, and so on, and in most programming languages such strings are enclosed in either single or double quotes. In C++ the enclosing delimiters are double quotes. In this form the string is referred to as a string literal and we often use such string literals in output statements when we wish to display text on the screen for the benefit of our users. For example, the usual first C++ program displays the string literal &#x201C;Hello, world!&#x201D; on the screen with the following output statement: 1cout &lt;&lt; &quot;Hello, world!&quot; &lt;&lt; endl; However, without string variables about all we can do with strings is output string literals to the screen, so we need to expand our ability to handle string data. When we talk about strings in C++, we must be careful because the C language, with which C++ is meant to be backward compatible, had one way of dealing with strings, while C++ has another, and to further complicate matters there are many non-standard implementations of C++ strings. These should gradually disappear as compiler vendors update their products to implement the string component of the C++ Standard Library. As a programmer, then, you must distinguish between the following three things: An &#x201C;ordinary&#x201D; array of characters, which is just like any other array and has no special properties that other arrays do not have. A C-string, which consists of an array of characters terminated by the null character &#x2018;\\0&#x2019;, and which therefore is different from an ordinary array of characters. There is a whole library of functions for dealing with strings represented in this form. Its header file is . In some implementations this library may be automatically included when you include other libraries such as the library. Note that the null character may very well not be the very last character in the C-string array, but it will be the first character beyond the last character of the actual string data in in that array. For example if you have a C-string storing &#x201C;Hello&#x201D; in a character array of size 10, then the letters of the word &#x201C;Hello&#x201D; will be in positions with indices 0 to 4, there will be a null character at index 5, and the locations with indices 6 to 9 will contain who-knows-what. In any case, it&#x2019;s the null character at index 5 that makes this otherwise ordinary character array a C-string.A C++ string object, which is an instance of a &#x201C;class&#x201D; data type whose actual internal representation you need not know or care about, as long as you know what you can and can&#x2019;t do with variables (and constants) having this data type. There is a library of C++ string functions as well, available by including the header file.Both the C-string library functions and the C++ string library functions are available to C++ programs. But, don&#x2019;t forget that these are two different function libraries, and the functions of the first library have a different notion of what a string is from the corresponding notion held by the functions of the second library. There are two further complicating aspects to this situation: first, though a function from one of the libraries may have a counterpart in the other library (i.e., a function in the other library designed to perform the same operation), the functions may not be used in the same way, and may not even have the same name; second, because of backward compatibility many functions from the C++ string library can be expected to work fine and do the expected thing with C-style strings, but not the other way around. The last statement above might seem to suggest we should use C++ strings and forget about C-strings altogether, and it is certainly true that there is a wider variety of more intuitive operations available for C++ strings. However, C-strings are more primitive, you may therefore find them simpler to deal with (provided you remember a few simple rules, such as the fact that the null character must always terminate such strings), and certainly if you read other, older programs you will see lots of C-strings. So, use whichever you find more convenient, but if you choose C++ strings and occasionally need to mix the two for some reason, be extra careful. Finally, there are certain situations in which C-strings must be used. To understand strings, you will have to spend some time studying sample programs. This study must include the usual prediction of how you expect a program to behave for given input, followed by a compile, link and run to test your prediction, as well as subsequent modification and testing to investigate questions that will arise along the way. In addition to experimenting with any supplied sample programs, you should be prepared to make up your own. In the following examples we attempt to draw the distinction between the two string representations and their associated operations. The list is not complete, but we do indicate how to perform many of the more useful kinds of tasks with each kind of string. The left-hand column contains examples relevant to C-strings and the right-hand column shows analogous examples in the context of C++ strings. C-strings (#include ) C++ strings (#include ) Declaring a C-string variable Declaring a C++ string object char str[10]; string str; Initializing a C-string variable Initializing a C++ string object char str1[11] = &#x201C;Call home!&#x201D;; string str1(&#x201C;Call home!&#x201D;); char str2[] = &#x201C;Send money!&#x201D;; string str2 = &#x201C;Send money!&#x201D;; char str3[] = {&#x2018;O&#x2019;, &#x2018;K&#x2019;, &#x2018;\\0&#x2019;}; or char str3[] = &#x201C;OK&#x201D; string str3(&#x201C;OK&#x201D;); string str4(10, &#x2018;x&#x2019;); Assigning to a C-string variable Assigning to a C++ string object Can&#x2019;t do it, i.e., can&#x2019;t do this: char str[10]; str = &#x201C;Hello!&#x201D;; string str; str = &#x201C;Hello&#x201D;; str = otherString; Concatenating two C-strings Concatenating two C++ string objects strcat(str1, str2); str1 += str2; strcpy(str, strcat(str1, str2)); str = str1 + str2; Copying a C-string variable Copying a C++ string object char str[20]; strcpy(str, &#x201C;Hello!&#x201D;); strcpy(str, otherString); string str; str = &#x201C;Hello&#x201D;; str = otherString; Accessing a single character Accessing a single character str[index] str[index]; str.at(index); str(index, count) Comparing two C-strings Comparing two C++ string objects if (strcmp(str1, str2) &lt; 0)cout &lt;&lt; &#x201C;str1 comes 1st.&#x201D;; if (str1 &lt; str2)cout &lt;&lt; &#x201C;str1 comes 1st.&#x201D;; if (strcmp(str1, str2) == 0)cout &lt;&lt; &#x201C;Equal strings.&#x201D;; if (str1 == str2)cout &lt;&lt; &#x201C;Equal strings.&#x201D;; if (strcmp(str1, str2) &gt; 0)cout &lt;&lt; &#x201C;str2 comes 1st.&#x201D;; if (str1 &gt; str2)cout &lt;&lt; &#x201C;str2 comes 1st.&#x201D;; Finding the length of a C-string Finding the length of a C++ string object strlen(str) str.length() Output of a C-string variable Output of a C++ string object cout &lt;&lt; str; cout &lt;&lt; str; cout &lt;&lt; setw(width) &lt;&lt; str; cout &lt;&lt; setw(width) &lt;&lt; str; In what follows, keep in mind that cin ignores white space when reading a string, while cin.get(), cin.getline() and getline() do not. Remember too that cin.getline() and getline() consume the delimiter while cin.get() does not. Finally, cin can be replaced with any open input stream, since file input with inFile, say, behaves in a manner completely analogous to the corresponding behavior of cin. Analogously, in the output examples given immediately above, cout could be replaced with any text output stream variable, say outFile. In all cases, numCh is the maximum number of characters that will be read. Input of a C-style string variable Input of a C++ string object cin &gt;&gt; s; cin &gt;&gt; s; cin.get(s, numCh+1);cin.get(s, numCh+1,&#x2019;\\n&#x2019;);cin.get(s, numCh+1,&#x2019;x&#x2019;);cin.getline(s, numCh+1); getline(cin, s); cin.getline(s, numCh+1, &#x2018;\\n&#x2019;);cin.getline(s, numCh+1, &#x2018;x&#x2019;); getline(cin, s, &#x2018;x&#x2019;); A useful naming convention for C-strings is illustrated by examples like 12typedef char String80[81];typedef char String20[21]; in which the two numbers in each definition differ by 1 to allow for the null character &#x2018;\\0&#x2019; to be stored in the array of characters, but to not be considered as part of the string stored there. No analog to this naming convention is necessary for C++ strings, since for all practical purposes, each C++ string variable may contain a string value of virtually unlimited length. &#x6765;&#x6E90;&#xFF1A; http://cs.smu.ca/~porter/csc/ref/c_cpp_strings.html","raw":null,"content":null,"categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://zealoussnow.github.io/categories/程序设计/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://zealoussnow.github.io/tags/C/"}]},{"title":"Linux安装poco库","slug":"linux-poco","date":"2016-05-06T02:19:15.000Z","updated":"2016-05-06T02:20:25.472Z","comments":true,"path":"2016/05/06/linux-poco/","link":"","permalink":"https://zealoussnow.github.io/2016/05/06/linux-poco/","excerpt":"","keywords":null,"text":"&#x4E0B;&#x8F7D;&#x6E90;&#x7801;&#x89E3;&#x538B;&#x6E90;&#x7801;&#x8BBE;&#x7F6E;&#x7F16;&#x8BD1;&#x9009;&#x9879;1./configure --omit=Data/ODBC --prefix=/home/zealoussnow/.OpenSource/poco-build --cflags=-fPIC --static --shared","raw":null,"content":null,"categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://zealoussnow.github.io/categories/程序设计/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://zealoussnow.github.io/tags/C/"}]},{"title":"CentOS7的使用 —— grub2","slug":"centos7-grub2","date":"2016-05-06T02:12:06.000Z","updated":"2016-05-06T02:18:58.136Z","comments":true,"path":"2016/05/06/centos7-grub2/","link":"","permalink":"https://zealoussnow.github.io/2016/05/06/centos7-grub2/","excerpt":"&#x5217;&#x51FA;&#x9ED8;&#x8BA4;&#x7684;&#x5185;&#x6838;12# grubby --default-kernel/boot/vmlinuz-3.10.0-229.20.1.el7.x86_64","keywords":null,"text":"&#x5217;&#x51FA;&#x9ED8;&#x8BA4;&#x7684;&#x5185;&#x6838;12# grubby --default-kernel/boot/vmlinuz-3.10.0-229.20.1.el7.x86_64 &#x67E5;&#x627E;&#x9ED8;&#x8BA4;&#x5185;&#x6838;&#x7684;&#x7D22;&#x5F15;12# grubby --default-index0 &#x4FEE;&#x6539;&#x9ED8;&#x8BA4;&#x542F;&#x52A8;&#x9879;1grubby --set-default /boot/vmlinuz-3.10-229.4.2.el7.x86_64 &#x5217;&#x51FA;&#x5185;&#x6838;&#x7684;grub&#x83DC;&#x5355;&#x9879;1grub --info=ALl or grub --info /boot/vmlinuz-3.10.229.4.2.el7.x86_64 &#x4ECE;&#x4E00;&#x4E2A;grub&#x83DC;&#x5355;&#x9879;&#x6DFB;&#x52A0;&#x6216;&#x8005;&#x79FB;&#x9664;&#x53C2;&#x6570;1grubby --remove-args=&quot;argX argY&quot; --args=&quot;argA argB&quot; --update-kernel /boot/kenel &#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;&#x53C2;&#x6570;&#x66F4;&#x65B0;&#x6240;&#x6709;&#x7684;&#x5185;&#x6838;&#x83DC;&#x5355;&#x9879;1grubby --update-kernel=ALL --args=console=ttyS0,115200 &#x6CE8;&#xFF1A; &#x6240;&#x7528;&#x7684;grubby&#x7684;&#x7248;&#x672C;&#x4E3A;grubby-8.28-11.el7.x86_64 &#x53C2;&#x8003;MAKING PERSISTENT CHANGES TO A GRUB 2 MENU USING THE GRUBBY TOOL","raw":null,"content":null,"categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://zealoussnow.github.io/categories/程序设计/"}],"tags":[{"name":"Linux基础","slug":"Linux基础","permalink":"https://zealoussnow.github.io/tags/Linux基础/"}]},{"title":"CentOS7的使用 —— systemd","slug":"centos7-systemd","date":"2016-05-06T02:00:39.000Z","updated":"2016-05-06T02:13:12.580Z","comments":true,"path":"2016/05/06/centos7-systemd/","link":"","permalink":"https://zealoussnow.github.io/2016/05/06/centos7-systemd/","excerpt":"&#x68C0;&#x89C6;&#x548C;&#x63A7;&#x5236;systemd&#x7684;&#x4E3B;&#x8981;&#x547D;&#x4EE4;&#x662F;systemctl&#xFF0C;&#x8BE5;&#x547D;&#x4EE4;&#x53EF;&#x7528;&#x4E8E;&#x67E5;&#x770B;&#x7CFB;&#x7EDF;&#x72B6;&#x6001;&#x548C;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x53CA;&#x670D;&#x52A1;&#x3002; &#x5728;systemctl&#x53C2;&#x6570;&#x4E2D;&#x6DFB;&#x52A0;-H &lt;username&gt;@&lt;host&gt;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x5BF9;&#x5176;&#x4ED6;&#x673A;&#x5668;&#x7684;&#x8FDC;&#x7A0B;&#x63A7;&#x5236;&#xFF0C;&#x8BE5;&#x8FC7;&#x7A0B;&#x4F7F;&#x7528;SSH&#x8FDE;&#x63A5;&#x3002;","keywords":null,"text":"&#x68C0;&#x89C6;&#x548C;&#x63A7;&#x5236;systemd&#x7684;&#x4E3B;&#x8981;&#x547D;&#x4EE4;&#x662F;systemctl&#xFF0C;&#x8BE5;&#x547D;&#x4EE4;&#x53EF;&#x7528;&#x4E8E;&#x67E5;&#x770B;&#x7CFB;&#x7EDF;&#x72B6;&#x6001;&#x548C;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x53CA;&#x670D;&#x52A1;&#x3002; &#x5728;systemctl&#x53C2;&#x6570;&#x4E2D;&#x6DFB;&#x52A0;-H &lt;username&gt;@&lt;host&gt;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x5BF9;&#x5176;&#x4ED6;&#x673A;&#x5668;&#x7684;&#x8FDC;&#x7A0B;&#x63A7;&#x5236;&#xFF0C;&#x8BE5;&#x8FC7;&#x7A0B;&#x4F7F;&#x7528;SSH&#x8FDE;&#x63A5;&#x3002; systemadm&#x662F;systemd&#x7684;&#x5B98;&#x65B9;&#x56FE;&#x5F62;&#x524D;&#x7AEF;&#xFF0C;&#x5B98;&#x65B9;&#x8F6F;&#x4EF6;&#x4ED3;&#x5E93;&#x63D0;&#x4F9B;&#x4E86;&#x7A33;&#x5B9A;&#x7248;&#x7684;systemd-ui &#x5206;&#x6790;&#x7CFB;&#x7EDF;&#x72B6;&#x6001;&#x8F93;&#x51FA;&#x6FC0;&#x6D3B;&#x7684;&#x5355;&#x5143;1# systemctl &#x6216;&#x8005; systemctl list-units &#x8F93;&#x51FA;&#x8FD0;&#x884C;&#x5931;&#x8D25;&#x7684;&#x5355;&#x5143;1# systemctl --failed &#x67E5;&#x770B;&#x6240;&#x6709;&#x5DF2;&#x5B89;&#x88C5;&#x7684;&#x670D;&#x52A1;1systemctl list-unit-files &#x6240;&#x6709;&#x53EF;&#x7528;&#x5355;&#x5143;&#x6587;&#x4EF6;&#x5B58;&#x653E;&#x5728;/usr/lib/systemd/system&#x548C;/etc/systemd/system&#x76EE;&#x5F55;(&#x540E;&#x8005;&#x4F18;&#x5148;&#x7EA7;&#x66F4;&#x9AD8;)&#x3002; &#x4F7F;&#x7528;&#x5355;&#x5143;&#x7ACB;&#x5373;&#x6FC0;&#x6D3B;&#x5355;&#x5143;1# systemctl start &lt;unit&gt; &#x7ACB;&#x5373;&#x505C;&#x6B62;&#x5355;&#x5143;1# systemctl stop &lt;unit&gt; &#x91CD;&#x542F;&#x5355;&#x5143;1# systemctl restart &lt;unit&gt; &#x91CD;&#x65B0;&#x52A0;&#x8F7D;&#x914D;&#x7F6E;1# systemctl reload &lt;unit&gt; &#x8F93;&#x51FA;&#x5355;&#x5143;&#x8FD0;&#x884C;&#x72B6;&#x6001;1# systemctl status &lt;unit&gt; &#x68C0;&#x67E5;&#x5355;&#x5143;&#x662F;&#x5426;&#x914D;&#x7F6E;&#x4E3A;&#x81EA;&#x52A8;&#x542F;&#x52A8;1# systemctl is-enabled &lt;unit&gt; &#x5F00;&#x673A;&#x81EA;&#x52A8;&#x6FC0;&#x6D3B;&#x5355;&#x5143;1# systemctl enable &lt;unit&gt; &#x53D6;&#x6D88;&#x5F00;&#x673A;&#x81EA;&#x52A8;&#x6FC0;&#x6D3B;&#x5355;&#x5143;1# systemctl disable &lt;unit&gt; &#x7981;&#x7528;&#x4E00;&#x4E2A;&#x5355;&#x5143;&#xFF08;&#x7981;&#x7528;&#x540E;&#xFF0C;&#x95F4;&#x63A5;&#x542F;&#x52A8;&#x4E5F;&#x662F;&#x4E0D;&#x53EF;&#x80FD;&#x7684;&#xFF09;1# systemctl mask &lt;unit&gt; &#x53D6;&#x6D88;&#x7981;&#x7528;&#x4E00;&#x4E2A;&#x5355;&#x5143;1# systemctl unmask &lt;unit&gt; &#x91CD;&#x65B0;&#x8F7D;&#x5165;systemd1# systemctl daemon-reload &#x663E;&#x793A;&#x5355;&#x5143;&#x7684;&#x624B;&#x518C;&#x9875;&#xFF08;&#x5FC5;&#x987B;&#x7531;&#x5355;&#x5143;&#x6587;&#x4EF6;&#x63D0;&#x4F9B;&#xFF09;1# systemctl help &lt;unit&gt; &#x7535;&#x6E90;&#x7BA1;&#x7406;&#x5B89;&#x88C5;[polkit(https://wiki.archlinux.org/index.php/Polkit)]&#x540E;&#x624D;&#x53EF;&#x4EE5;&#x8BA9;&#x4E00;&#x822C;&#x7528;&#x6237;&#x4F7F;&#x7528;&#x7535;&#x6E90;&#x7BA1;&#x7406; 1systemctl reboot(&#x91CD;&#x542F;) | poweroff(&#x9000;&#x51FA;&#x7CFB;&#x7EDF;&#x5E76;&#x505C;&#x6B62;&#x7535;&#x6E90;) | suspend(&#x5F85;&#x673A;) | hibernate(&#x4F11;&#x7720;) | hybrid-sleep(&#x6DF7;&#x5408;&#x4F11;&#x7720;&#x6A21;&#x5F0F;) &#x7F16;&#x5199;&#x5355;&#x5143;&#x6587;&#x4EF6;&#x7B49;&#x5185;&#x5BB9;&#x8BF7;&#x770B;&#x53C2;&#x8003;&#x3002;&#x3002;&#x3002; &#x53C2;&#x8003;systemd&#x8BE6;&#x89E3;Archlinux Wiki, systemd)systemctl&#x547D;&#x4EE4;&#x5B8C;&#x5168;&#x6307;&#x5357;","raw":null,"content":null,"categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://zealoussnow.github.io/categories/程序设计/"}],"tags":[{"name":"Linux基础","slug":"Linux基础","permalink":"https://zealoussnow.github.io/tags/Linux基础/"}]},{"title":"Linux VNC服务配置","slug":"setting-vnc","date":"2016-04-29T10:07:18.000Z","updated":"2016-04-29T10:11:51.475Z","comments":true,"path":"2016/04/29/setting-vnc/","link":"","permalink":"https://zealoussnow.github.io/2016/04/29/setting-vnc/","excerpt":"CentOS-6.5&#x5B89;&#x88C5;&#x548C;&#x914D;&#x7F6E;VNC&#x670D;&#x52A1;1.&#x4E0B;&#x8F7D;tigervnc&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x548C;&#x670D;&#x52A1;&#x7AEF;&#x7A0B;&#x5E8F; 1# yum install tigervnc-server tigervnc","keywords":null,"text":"CentOS-6.5&#x5B89;&#x88C5;&#x548C;&#x914D;&#x7F6E;VNC&#x670D;&#x52A1;1.&#x4E0B;&#x8F7D;tigervnc&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x548C;&#x670D;&#x52A1;&#x7AEF;&#x7A0B;&#x5E8F; 1# yum install tigervnc-server tigervnc 2.&#x4E3A;&#x666E;&#x901A;&#x7528;&#x6237;&#x8BBE;&#x7F6E;vnc&#x670D;&#x52A1; &#x7F16;&#x8F91;/etc/sysconfig/vncservers&#xFF0C;&#x52A0;&#x5165; 12VNCSERVERS=&quot;8:test&quot;VNCSERVERARGS[8]=&quot;-geometry 1400x900 -nolisten tcp&quot; &#x6DFB;&#x52A0;&#x7684;&#x7528;&#x6237;test&#x5FC5;&#x987B;&#x662F;&#x7CFB;&#x7EDF;&#x4E2D;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;&#x7528;&#x6237;&#x3002; 3.&#x4E3A;test&#x8BBE;&#x7F6E;vnc&#x7684;&#x767B;&#x5F55;&#x5BC6;&#x7801; &#x5207;&#x6362;&#x5230;&#x666E;&#x901A;&#x7528;&#x6237;&#x4E0A;&#xFF0C;&#x4F7F;&#x7528;vncpasswd&#x8BBE;&#x7F6E;&#x5BC6;&#x7801; 4.&#x542F;&#x52A8;vnc&#x670D;&#x52A1; 1service vncserver start &#x53C2;&#x8003;&#x8D44;&#x6599;CentOS-6.5&#x5B89;&#x88C5;&#x914D;&#x7F6E;tigervncVNC&#x670D;&#x52A1;&#x5168;&#x9762;&#x8BBE;&#x7F6E;","raw":null,"content":null,"categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://zealoussnow.github.io/categories/程序设计/"}],"tags":[{"name":"Linux基础","slug":"Linux基础","permalink":"https://zealoussnow.github.io/tags/Linux基础/"}]},{"title":"剖析TCP状态变迁","slug":"tcp-state-change","date":"2016-04-29T09:57:26.000Z","updated":"2016-04-29T10:01:40.154Z","comments":true,"path":"2016/04/29/tcp-state-change/","link":"","permalink":"https://zealoussnow.github.io/2016/04/29/tcp-state-change/","excerpt":"","keywords":null,"text":"CLOSED:&#x521D;&#x59CB;&#x72B6;&#x6001; LISTEN:&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x7684;&#x67D0;&#x4E2A;SOCKET&#x5904;&#x4E8E;&#x76D1;&#x542C;&#x72B6;&#x6001;&#xFF0C;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x8FDE;&#x63A5;&#x4E86; SYN_RCVD:&#x8868;&#x793A;&#x63A5;&#x6536;&#x5230;&#x4E86;SYN&#x62A5;&#x6587;&#xFF0C;&#x5728;&#x6B63;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD9;&#x4E2A;&#x72B6;&#x6001;&#x662F;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x7684;SOCKET&#x5728;&#x5EFA;&#x7ACB;TCP&#x8FDE;&#x63A5;&#x65F6;&#x7684;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x4F1A;&#x8BDD;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x4E2D;&#x95F4;&#x72B6;&#x6001;&#xFF0C;&#x5F88;&#x77ED;&#x6682;&#xFF0C;&#x57FA;&#x672C;&#x7528;netstat&#x5F88;&#x96BE;&#x770B;&#x5230;&#x8FD9;&#x79CD;&#x72B6;&#x6001;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x8FD9;&#x79CD;&#x72B6;&#x6001;&#x65F6;&#xFF0C;&#x5F53;&#x53D7;&#x5230;&#x5BA2;&#x6237;&#x7AEF;&#x7684;ACK&#x62A5;&#x6587;&#x540E;&#xFF0C;&#x5B83;&#x4F1A;&#x8FDB;&#x5165;&#x5230;ESTABLISHED&#x72B6;&#x6001; SYN_SENT:&#x8FD9;&#x4E2A;&#x72B6;&#x6001;&#x4E0E;SYN_RCVD&#x9065;&#x76F8;&#x547C;&#x5E94;&#xFF0C;&#x5F53;&#x5BA2;&#x6237;&#x7AEF;SOCKET&#x6267;&#x884C;connect&#x8FDE;&#x63A5;&#x65F6;&#xFF0C;&#x5B83;&#x9996;&#x5148;&#x53D1;&#x9001;SYN&#x62A5;&#x6587;&#xFF0C;&#x56E0;&#x6B64;&#x4E5F;&#x5C31;&#x8FDB;&#x5165;&#x5230;&#x4E86;SYN_SENT&#x72B6;&#x6001;&#xFF0C;&#x5E76;&#x7B49;&#x5F85;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x7684;&#x53D1;&#x9001;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x4E2D;&#x7684;&#x7B2C;2&#x4E2A;&#x62A5;&#x6587;&#x3002;SYN_SENT&#x8868;&#x793A;&#x5BA2;&#x6237;&#x7AEF;&#x5DF2;&#x7ECF;&#x53D1;&#x9001;SYN_SENT&#x62A5;&#x6587; ESTABLISHED:&#x8868;&#x793A;&#x8FDE;&#x63A5;&#x5DF2;&#x7ECF;&#x5EFA;&#x7ACB;&#xFF0C;&#x5373;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x5DF2;&#x5B8C;&#x6210; FIN_WAIT_1:&#x8FD9;&#x4E2A;&#x72B6;&#x6001;&#x8981;&#x597D;&#x597D;&#x89E3;&#x91CA;&#x4E00;&#x4E0B;&#xFF0C;&#x5176;&#x5B9E;FIN_WAIT_1&#x548C;FIN_WAIT_2&#x72B6;&#x6001;&#x7684;&#x771F;&#x6B63;&#x542B;&#x4E49;&#x90FD;&#x662F;&#x8868;&#x793A;&#x7B49;&#x5F85;&#x5BF9;&#x65B9;&#x7684;FIN&#x62A5;&#x6587;&#x3002;&#x800C;&#x8FD9;&#x4E24;&#x79CD;&#x72B6;&#x6001;&#x7684;&#x533A;&#x522B;&#x662F;&#xFF1A;FIN_WAIT_1&#x72B6;&#x6001;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x5F53;SOCKET&#x5728;ESTABLISHED&#x72B6;&#x6001;&#x65F6;&#xFF0C;&#x5B83;&#x60F3;&#x4E3B;&#x52A8;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#xFF0C;&#x5411;&#x5BF9;&#x65B9;&#x53D1;&#x9001;&#x4E86;FIN&#x62A5;&#x6587;&#xFF0C;&#x6B64;&#x65F6;&#x8BE5;SOCKET&#x5373;&#x8FDB;&#x5165;&#x5230;FIN_WAIT_1&#x72B6;&#x6001;&#x3002;&#x800C;&#x5F53;&#x5BF9;&#x65B9;&#x56DE;&#x5E94;ACK&#x62A5;&#x6587;&#x540E;&#xFF0C;&#x5219;&#x8FDB;&#x5165;&#x5230;FIN_WAIT_2&#x72B6;&#x6001;&#xFF0C;&#x5F53;&#x7136;&#x5728;&#x5B9E;&#x9645;&#x7684;&#x6B63;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x65E0;&#x8BBA;&#x5BF9;&#x65B9;&#x4F55;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x90FD;&#x5E94;&#x8BE5;&#x9A6C;&#x4E0A;&#x56DE;&#x5E94;ACK&#x62A5;&#x6587;&#xFF0C;&#x6240;&#x4EE5;FIN_WAIT_1&#x72B6;&#x6001;&#x4E00;&#x822C;&#x662F;&#x6BD4;&#x8F83;&#x96BE;&#x89C1;&#x5230;&#x7684;&#xFF0C;&#x800C;FIN_WAIT_2&#x72B6;&#x6001;&#x8FD8;&#x6709;&#x65F6;&#x5E38;&#x5E38;&#x53EF;&#x4EE5;&#x7528;netstat&#x770B;&#x5230;&#x3002; FIN_WAIT_2:&#x4E0A;&#x9762;&#x5DF2;&#x7ECF;&#x8BE6;&#x7EC6;&#x89E3;&#x91CA;&#x4E86;&#x8FD9;&#x79CD;&#x72B6;&#x6001;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;FIN_WAIT_2&#x72B6;&#x6001;&#x4E0B;&#x7684;SOCKET&#xFF0C;&#x8868;&#x793A;&#x534A;&#x8FDE;&#x63A5;&#xFF0C;&#x4E5F;&#x5373;&#x6709;&#x4E00;&#x65B9;&#x8981;&#x6C42;close&#x8FDE;&#x63A5;&#xFF0C;&#x4F46;&#x53E6;&#x5916;&#x8FD8;&#x544A;&#x8BC9;&#x5BF9;&#x65B9;&#xFF0C;&#x6211;&#x6682;&#x65F6;&#x8FD8;&#x6709;&#x70B9;&#x6570;&#x636E;&#x9700;&#x8981;&#x4F20;&#x9001;&#x7ED9;&#x4F60;&#xFF0C;&#x7A0D;&#x540E;&#x518D;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#x3002; TIME_WAIT:&#x8868;&#x793A;&#x6536;&#x5230;&#x4E86;&#x5BF9;&#x65B9;&#x7684;FIN&#x62A5;&#x6587;&#xFF0C;&#x5E76;&#x53D1;&#x9001;&#x51FA;&#x4E86;ACK&#x62A5;&#x6587;&#xFF0C;&#x5C31;&#x7B49;2MSL&#x540E;&#x5373;&#x53EF;&#x56DE;&#x5230;CLOSED&#x53EF;&#x7528;&#x72B6;&#x6001;&#x4E86;&#x3002;&#x5982;&#x679C;FIN_WAIT_1&#x72B6;&#x6001;&#x4E0B;&#xFF0C;&#x6536;&#x5230;&#x4E86;&#x5BF9;&#x65B9;&#x540C;&#x65F6;&#x5E26;FIN&#x6807;&#x5FD7;&#x548C;ACK&#x6807;&#x5FD7;&#x7684;&#x62A5;&#x6587;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8FDB;&#x5165;&#x5230;TIME_WAIT&#x72B6;&#x6001;&#xFF0C;&#x800C;&#x65E0;&#x987B;&#x7ECF;&#x8FC7;FIN_WAIT_2&#x72B6;&#x6001;&#x3002;&#x4F8B;&#x5916;&#x72B6;&#x6001;&#x3002;&#x6B63;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5F53;&#x4F60;&#x53D1;&#x9001;FIN&#x62A5;&#x6587;&#x540E;&#xFF0C;&#x6309;&#x7406;&#x6765;&#x8BF4;&#x662F;&#x5E94;&#x8BE5;&#x5148;&#x6536;&#x5230;&#xFF08;&#x6216;&#x540C;&#x65F6;&#x6536;&#x5230;&#xFF09;&#x5BF9;&#x65B9;&#x7684;ACK&#x62A5;&#x6587;&#xFF0C;&#x518D;&#x6536;&#x5230;&#x5BF9;&#x65B9;&#x7684;FIN&#x62A5;&#x6587;&#x3002;&#x4F46;&#x662F;CLOSING&#x72B6;&#x6001;&#x8868;&#x793A;&#x4F60;&#x53D1;&#x9001;FIN&#x62A5;&#x6587;&#x540E;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x6536;&#x5230;&#x5BF9;&#x65B9;&#x7684;ACK&#x62A5;&#x6587;&#xFF0C;&#x53CD;&#x800C;&#x5374;&#x4E5F;&#x6536;&#x5230;&#x4E86;&#x5BF9;&#x65B9;&#x7684;FIN&#x62A5;&#x6587;&#x3002;&#x4EC0;&#x4E48;&#x60C5;&#x51B5;&#x4E0B;&#x4F1A;&#x51FA;&#x73B0;&#x6B64;&#x79CD;&#x60C5;&#x51B5;&#x5462;&#xFF1F;&#x5176;&#x5B9E;&#x7EC6;&#x60F3;&#x4E00;&#x4E0B;&#xFF0C;&#x4E5F;&#x4E0D;&#x96BE;&#x5F97;&#x51FA;&#x7ED3;&#x8BBA;&#xFF1A;&#x90A3;&#x5C31;&#x662F;&#x5982;&#x679C;&#x53CC;&#x65B9;&#x51E0;&#x4E4E;&#x5728;&#x540C;&#x65F6;close&#x4E00;&#x4E2A;SOCKET&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x51FA;&#x73B0;&#x4E86;&#x53CC;&#x65B9;&#x540C;&#x65F6;&#x53D1;&#x9001;FIN&#x62A5;&#x6587;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x4E5F;&#x5373;&#x4F1A;&#x51FA;&#x73B0;CLOSING&#x72B6;&#x6001;&#xFF0C;&#x8868;&#x793A;&#x53CC;&#x65B9;&#x90FD;&#x6B63;&#x5728;&#x5173;&#x95ED;SOCKET&#x8FDE;&#x63A5;&#x3002; CLOSE_WAIT:&#x8FD9;&#x79CD;&#x72B6;&#x6001;&#x7684;&#x542B;&#x4E49;&#x5176;&#x5B9E;&#x662F;&#x8868;&#x793A;&#x5728;&#x7B49;&#x5F85;&#x5173;&#x95ED;&#x3002;&#x600E;&#x4E48;&#x7406;&#x89E3;&#x5462;&#xFF1F;&#x5F53;&#x5BF9;&#x65B9;close&#x4E00;&#x4E2A;SOCKET&#x540E;&#x53D1;&#x9001;FIN&#x62A5;&#x6587;&#x7ED9;&#x81EA;&#x5DF1;&#xFF0C;&#x4F60;&#x7CFB;&#x7EDF;&#x6BEB;&#x65E0;&#x7591;&#x95EE;&#x5730;&#x4F1A;&#x56DE;&#x5E94;&#x4E00;&#x4E2A;ACK&#x62A5;&#x6587;&#x7ED9;&#x5BF9;&#x65B9;&#xFF0C;&#x6B64;&#x65F6;&#x5219;&#x8FDB;&#x5165;&#x5230;CLOSE_WAIT&#x72B6;&#x6001;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5462;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x4F60;&#x771F;&#x6B63;&#x9700;&#x8981;&#x8003;&#x8651;&#x7684;&#x4E8B;&#x60C5;&#x662F;&#x5BDF;&#x770B;&#x4F60;&#x662F;&#x5426;&#x8FD8;&#x6709;&#x6570;&#x636E;&#x53D1;&#x9001;&#x7ED9;&#x5BF9;&#x65B9;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x4E5F;&#x5C31;&#x53EF;&#x4EE5;close&#x8FD9;&#x4E2A;SOCKET&#xFF0C;&#x53D1;&#x9001;FIN&#x62A5;&#x6587;&#x7ED9;&#x5BF9;&#x65B9;&#xFF0C;&#x4E5F;&#x5373;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#x3002;&#x6240;&#x4EE5;&#x4F60;&#x5728;CLOSE_WAIT&#x72B6;&#x6001;&#x4E0B;&#xFF0C;&#x9700;&#x8981;&#x5B8C;&#x6210;&#x7684;&#x4E8B;&#x60C5;&#x662F;&#x7B49;&#x5F85;&#x4F60;&#x53BB;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#x3002; LAST_ACK:&#x8FD9;&#x4E2A;&#x72B6;&#x6001;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x597D;&#x7406;&#x89E3;&#x7684;&#xFF0C;&#x5B83;&#x662F;&#x88AB;&#x52A8;&#x5173;&#x95ED;&#x4E00;&#x65B9;&#x5728;&#x53D1;&#x9001;FIN&#x62A5;&#x6587;&#x540E;&#xFF0C;&#x6700;&#x540E;&#x7B49;&#x5F85;&#x5BF9;&#x65B9;&#x7684;ACK&#x62A5;&#x6587;&#x3002;&#x5F53;&#x6536;&#x5230;ACK&#x62A5;&#x6587;&#x540E;&#xFF0C;&#x4E5F;&#x5373;&#x53EF;&#x4EE5;&#x8FDB;&#x5165;&#x5230;CLOSED&#x53EF;&#x7528;&#x72B6;&#x6001;&#x4E86;&#x3002;","raw":null,"content":null,"categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://zealoussnow.github.io/categories/程序设计/"}],"tags":[{"name":"网络基础","slug":"网络基础","permalink":"https://zealoussnow.github.io/tags/网络基础/"}]},{"title":"API Hook","slug":"api-hook","date":"2016-04-29T09:48:12.000Z","updated":"2016-04-29T09:55:45.978Z","comments":true,"path":"2016/04/29/api-hook/","link":"","permalink":"https://zealoussnow.github.io/2016/04/29/api-hook/","excerpt":"&#x6BCF;&#x4E00;&#x7C7B;HOOK&#x90FD;&#x5B58;&#x653E;&#x5728;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x5217;&#x8868;&#x4E2D;&#xFF0C;&#x79F0;&#x4E4B;&#x4E3A;&#x94A9;&#x5B50;&#x94FE;&#x8868;&#xFF0C;&#x8FD9;&#x4E9B;&#x94A9;&#x5B50;&#x94FE;&#x8868;&#x7531;Windows&#x7CFB;&#x7EDF;&#x6765;&#x7EF4;&#x62A4;&#x3002;&#x8FD9;&#x4E2A;&#x5217;&#x8868;&#x7684;&#x6307;&#x9488;&#x6307;&#x5411;&#x6307;&#x5B9A;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5B9A;&#x4E49;&#x7684;&#xFF0C;&#x88AB;HOOK&#x5B50;&#x7A0B;&#x8C03;&#x7528;&#x7684;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BE5;&#x94A9;&#x5B50;&#x7684;&#x5404;&#x4E2A;&#x5904;&#x7406;&#x5B50;&#x7A0B;&#x3002;&#x5F53;&#x4E0E;&#x6307;&#x5B9A;&#x7684;HOOK&#x7C7B;&#x578B;&#x5173;&#x8054;&#x7684;&#x6D88;&#x606F;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x7CFB;&#x7EDF;&#x5C31;&#x628A;&#x8FD9;&#x4E2A;&#x6D88;&#x606F;&#x4F20;&#x9012;&#x5230;HOOK&#x5B50;&#x7A0B;&#xFF08;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#xFF09;&#x3002;HOOK&#x5B50;&#x7A0B;&#x5C31;&#x53EF;&#x4EE5;&#x76D1;&#x89C6;&#x6D88;&#x606F;&#xFF0C;&#x6216;&#x8005;&#x4FEE;&#x6539;&#x6D88;&#x606F;&#xFF0C;&#x6216;&#x8005;&#x505C;&#x6B62;&#x6D88;&#x606F;&#x7684;&#x524D;&#x8FDB;&#xFF0C;&#x907F;&#x514D;&#x8FD9;&#x4E9B;&#x6D88;&#x606F;&#x4F20;&#x9012;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;HOOK&#x5B50;&#x7A0B;&#x6216;&#x8005;&#x76EE;&#x7684;&#x7A97;&#x53E3;&#x3002;&#x8C03;&#x7528;&#x7CFB;&#x7EDF;API&#x7684;&#x51FD;&#x6570;SetWindowsHookEx&#x53EF;&#x4EE5;&#x628A;HOOK&#x5B50;&#x7A0B;&#x8BBE;&#x7F6E;&#x5230;&#x94A9;&#x5B50;&#x94FE;&#x8868;&#x4E2D;&#x53BB;&#x3002;","keywords":null,"text":"&#x6BCF;&#x4E00;&#x7C7B;HOOK&#x90FD;&#x5B58;&#x653E;&#x5728;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x5217;&#x8868;&#x4E2D;&#xFF0C;&#x79F0;&#x4E4B;&#x4E3A;&#x94A9;&#x5B50;&#x94FE;&#x8868;&#xFF0C;&#x8FD9;&#x4E9B;&#x94A9;&#x5B50;&#x94FE;&#x8868;&#x7531;Windows&#x7CFB;&#x7EDF;&#x6765;&#x7EF4;&#x62A4;&#x3002;&#x8FD9;&#x4E2A;&#x5217;&#x8868;&#x7684;&#x6307;&#x9488;&#x6307;&#x5411;&#x6307;&#x5B9A;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5B9A;&#x4E49;&#x7684;&#xFF0C;&#x88AB;HOOK&#x5B50;&#x7A0B;&#x8C03;&#x7528;&#x7684;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BE5;&#x94A9;&#x5B50;&#x7684;&#x5404;&#x4E2A;&#x5904;&#x7406;&#x5B50;&#x7A0B;&#x3002;&#x5F53;&#x4E0E;&#x6307;&#x5B9A;&#x7684;HOOK&#x7C7B;&#x578B;&#x5173;&#x8054;&#x7684;&#x6D88;&#x606F;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x7CFB;&#x7EDF;&#x5C31;&#x628A;&#x8FD9;&#x4E2A;&#x6D88;&#x606F;&#x4F20;&#x9012;&#x5230;HOOK&#x5B50;&#x7A0B;&#xFF08;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#xFF09;&#x3002;HOOK&#x5B50;&#x7A0B;&#x5C31;&#x53EF;&#x4EE5;&#x76D1;&#x89C6;&#x6D88;&#x606F;&#xFF0C;&#x6216;&#x8005;&#x4FEE;&#x6539;&#x6D88;&#x606F;&#xFF0C;&#x6216;&#x8005;&#x505C;&#x6B62;&#x6D88;&#x606F;&#x7684;&#x524D;&#x8FDB;&#xFF0C;&#x907F;&#x514D;&#x8FD9;&#x4E9B;&#x6D88;&#x606F;&#x4F20;&#x9012;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;HOOK&#x5B50;&#x7A0B;&#x6216;&#x8005;&#x76EE;&#x7684;&#x7A97;&#x53E3;&#x3002;&#x8C03;&#x7528;&#x7CFB;&#x7EDF;API&#x7684;&#x51FD;&#x6570;SetWindowsHookEx&#x53EF;&#x4EE5;&#x628A;HOOK&#x5B50;&#x7A0B;&#x8BBE;&#x7F6E;&#x5230;&#x94A9;&#x5B50;&#x94FE;&#x8868;&#x4E2D;&#x53BB;&#x3002; &#x4EE3;&#x7801;&#x7684;injection&#x5E38;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x6709;&#xFF1A; 1.&#x4F7F;&#x7528;&#x6CE8;&#x518C;&#x8868;HKLM/Software/Microsoft/Windows NT/CurrentVersion/Windows/AppInit_DLLs &#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x591A;&#x4E2A;DLL&#xFF0C;&#x7528;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002;&#x8FD9;&#x4E9B;DLL&#x4F1A;&#x88AB;&#x4EFB;&#x4F55;&#x7528;&#x5230;User32.dll&#x7684;&#x6240;&#x6709;&#x7A0B;&#x5E8F;&#x81EA;&#x52A8;&#x52A0;&#x8F7D;&#x3002;&#x5F53;User32.dll&#x52A0;&#x8F7D;&#x7684;&#x65F6;&#x5019;&#xFF0C;User32.dll&#x7684;DllMain&#x4F1A;&#x6536;&#x5230;&#x4E00;&#x4E2A;DLL_PROCESS_ATTACH&#x901A;&#x77E5;&#xFF0C;User32&#x5728;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x8BFB;&#x53D6;&#x6CE8;&#x518C;&#x8868;&#x9879;&#x4E2D;&#x7684;&#x503C;&#xFF0C;&#x8C03;&#x7528;LoadLibrary&#x52A0;&#x8F7D;&#x5404;&#x4E2A;DLL&#x3002;&#x663E;&#x7136;&#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x8981;&#x6C42;&#x8BBE;&#x7F6E;&#x6CE8;&#x518C;&#x8868;&#x4E4B;&#x540E;&#x7ACB;&#x523B;&#x91CD;&#x8D77;&#x7CFB;&#x7EDF;&#xFF0C;&#x4E0D;&#x8FC7;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#x8FD9;&#x4E0D;&#x662F;&#x5927;&#x95EE;&#x9898;&#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x7684;&#x4E3B;&#x8981;&#x95EE;&#x9898;&#x5728;&#x4E8E;&#xFF0C;&#x53EA;&#x6709;&#x7528;&#x5230;User32.dll&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x624D;&#x4F1A;&#x88AB;Inject&#x3002;&#x6240;&#x6709;&#x7684;GUI&#x548C;&#x5C11;&#x90E8;&#x5206;CUI&#x7A0B;&#x5E8F;&#x4F1A;&#x7528;&#x5230;User32.dll&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x4F60;&#x7684;API Hook&#x7A0B;&#x5E8F;&#x4E0D;&#x6253;&#x7B97;&#x76D1;&#x89C6;CUI&#x7A0B;&#x5E8F;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x80FD;&#x95EE;&#x9898;&#x5E76;&#x4E0D;&#x592A;&#x5927;&#x3002;&#x4F46;&#x662F;&#x5982;&#x679C;&#x4F60;&#x7684;API Hook&#x7A0B;&#x5E8F;&#x9700;&#x8981;&#x76D1;&#x89C6;&#x7CFB;&#x7EDF;&#x4E2D;&#x6240;&#x6709;&#x8FDB;&#x7A0B;&#x7684;&#x8BDD;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x7684;&#x9650;&#x5236;&#x5C06;&#x662F;&#x975E;&#x5E38;&#x81F4;&#x547D;&#x7684;&#x3002; 2.&#x8C03;&#x7528;SetWindowsHookEx(WH_GETMESSAGE, &#x2026;, 0) &#x53EF;&#x4EE5;&#x4F7F;&#x7528;SetWindowsHookEx(WH_GETMESSAGE, &#x2026;, 0) &#x8BBE;&#x7F6E;&#x5168;&#x5C40;&#x7684;&#x6D88;&#x606F;&#x94A9;&#x5B50;&#xFF0C;&#x867D;&#x7136;&#x53EF;&#x80FD;&#x4F60;&#x7684;&#x7A0B;&#x5E8F;&#x5E76;&#x4E0D;&#x7528;&#x5230;&#x6D88;&#x606F;&#x94A9;&#x5B50;&#xFF0C;&#x4F46;&#x662F;&#x94A9;&#x5B50;&#x7684;&#x4E00;&#x4E2A;&#x526F;&#x4F5C;&#x7528;&#x662F;&#x4F1A;&#x5C06;&#x5BF9;&#x5E94;&#x7684;DLL&#x52A0;&#x8F7D;&#x5230;&#x6240;&#x6709;&#x7684;GUI&#x7EBF;&#x7A0B;&#x4E4B;&#x4E2D;&#x3002;&#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x53EA;&#x6709;&#x7528;&#x5230;GUI&#x7684;&#x8FDB;&#x7A0B;&#x624D;&#x4F1A;&#x88AB;&#x6302;&#x63A5;&#x3002;&#x867D;&#x7136;&#x6709;&#x8FD9;&#x79CD;&#x9650;&#x5236;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x4ECD;&#x7136;&#x662F;&#x6700;&#x5E38;&#x7528;&#x7684;&#x6302;&#x63A5;&#x8FDB;&#x7A0B;&#x7684;&#x65B9;&#x6CD5;&#x3002; 3.&#x4F7F;&#x7528;CreateRemoteThread&#x51FD;&#x6570;&#x5728;&#x76EE;&#x6807;&#x8FDB;&#x7A0B;&#x4E2D;&#x521B;&#x5EFA;&#x8FDC;&#x7A0B;&#x7EBF;&#x7A0B; &#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5728;&#x4EFB;&#x610F;&#x7684;&#x76EE;&#x6807;&#x8FDB;&#x7A0B;&#x4E2D;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x8FDC;&#x7A0B;&#x7EBF;&#x7A0B;&#xFF0C;&#x8FDC;&#x7A0B;&#x7EBF;&#x7A0B;&#x4E2D;&#x53EF;&#x4EE5;&#x6267;&#x884C;&#x4EFB;&#x610F;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x6837;&#x4FBF;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#x628A;&#x6211;&#x4EEC;&#x7684;&#x4EE3;&#x7801;Inject&#x5230;&#x76EE;&#x6807;&#x8FDB;&#x7A0B;&#x4E2D;&#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x5177;&#x6709;&#x6700;&#x5927;&#x6D3B;&#x6027;&#xFF0C;&#x4F46;&#x662F;&#x96BE;&#x5EA6;&#x4E5F;&#x6700;&#x9AD8;&#xFF1A; a) &#x8FDC;&#x7A0B;&#x7EBF;&#x7A0B;&#x4EE3;&#x7801;&#x5FC5;&#x987B;&#x53EF;&#x4EE5;&#x81EA;&#x91CD;&#x5B9A;&#x4F4D; b) &#x8981;&#x80FD;&#x591F;&#x76D1;&#x89C6;&#x8FDB;&#x7A0B;&#x7684;&#x542F;&#x52A8;&#x548C;&#x7ED3;&#x675F;&#xFF0C;&#x8FD9;&#x6837;&#x624D;&#x53EF;&#x4EE5;&#x6302;&#x63A5;&#x5230;&#x6240;&#x6709;&#x8FDB;&#x7A0B; 4.&#x5982;&#x679C;&#x4F60;&#x53EA;&#x662F;&#x8981;&#x6302;&#x63A5;&#x67D0;&#x4E2A;&#x7279;&#x5B9A;&#x8FDB;&#x7A0B;&#x7684;&#x5E76;&#x4E14;&#x60C5;&#x51B5;&#x5141;&#x8BB8;&#x4F60;&#x81EA;&#x5DF1;&#x6765;&#x521B;&#x5EFA;&#x6B64;&#x8FDB;&#x7A0B;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x8C03;&#x7528;CreateProcess(&#x2026;, CREATE_SUSPENDED)&#x521B;&#x5EFA;&#x5B50;&#x8FDB;&#x7A0B;&#x5E76;&#x6682;&#x505C;&#x8FD0;&#x884C;&#xFF0C;&#x7136;&#x540E;&#x4FEE;&#x6539;&#x5165;&#x53E3;&#x4EE3;&#x7801;&#x4F7F;&#x4E4B;&#x8C03;&#x7528;LoadLibrary&#x52A0;&#x8F7D;&#x81EA;&#x5DF1;&#x7684;DLL&#x3002;&#x8BE5;&#x65B9;&#x6CD5;&#x5728;&#x4E0D;&#x540C;CPU&#x4E4B;&#x95F4;&#x663E;&#x7136;&#x662F;&#x65E0;&#x6CD5;&#x79FB;&#x690D;&#x7684;&#x3002; Hook API&#x5E38;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x6709;&#xFF1A; 1.&#x627E;&#x5230;API&#x51FD;&#x6570;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x6539;&#x5199;&#x51FD;&#x6570;&#x5934;&#x51E0;&#x4E2A;&#x5B57;&#x8282;&#x4E3A;JMP&#x6307;&#x4EE4;&#x8DF3;&#x8F6C;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x518D;&#x6267;&#x884C;API&#x5F00;&#x5934;&#x51E0;&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x5185;&#x5BB9;&#x518D;&#x8DF3;&#x56DE;&#x539F;&#x5730;&#x5740;&#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x5BF9;CPU&#x6709;&#x8F83;&#x5927;&#x7684;&#x4F9D;&#x8D56;&#x6027;&#xFF0C;&#x800C;&#x4E14;&#x5728;&#x591A;&#x7EBF;&#x7A0B;&#x73AF;&#x5883;&#x4E0B;&#x53EF;&#x80FD;&#x51FA;&#x95EE;&#x9898;&#xFF0C;&#x5F53;&#x6539;&#x5199;&#x51FD;&#x6570;&#x4EE3;&#x7801;&#x7684;&#x65F6;&#x5019;&#x6709;&#x53EF;&#x80FD;&#x6B64;&#x51FD;&#x6570;&#x6B63;&#x5728;&#x88AB;&#x6267;&#x884C;&#xFF0C;&#x8FD9;&#x6837;&#x505A;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x7A0B;&#x5E8F;&#x51FA;&#x9519;&#x3002; 2.&#x4FEE;&#x6539;PE&#x6587;&#x4EF6;&#x7684;IAT (Import Address Table)&#xFF0C;&#x4F7F;&#x4E4B;&#x6307;&#x5411;&#x81EA;&#x5DF1;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x6837;EXE/DLL&#x5728;&#x8C03;&#x7528;&#x7CFB;&#x7EDF;API&#x7684;&#x65F6;&#x5019;&#x4FBF;&#x4F1A;&#x8C03;&#x7528;&#x4F60;&#x81EA;&#x5DF1;&#x7684;&#x51FD;&#x6570; Refefence Website","raw":null,"content":null,"categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://zealoussnow.github.io/categories/程序设计/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://zealoussnow.github.io/tags/Windows/"}]},{"title":"libevent源码阅读","slug":"libevent","date":"2016-04-29T09:43:50.000Z","updated":"2016-05-06T03:31:15.125Z","comments":true,"path":"2016/04/29/libevent/","link":"","permalink":"https://zealoussnow.github.io/2016/04/29/libevent/","excerpt":"&#x6E90;&#x4EE3;&#x7801;&#x7EC4;&#x7EC7;&#x7ED3;&#x6784;libevent&#x5E93;&#x4E3B;&#x8981;&#x5206;&#x4E3A;&#xFF1A;&#x5934;&#x6587;&#x4EF6;&#x3001;&#x8F85;&#x52A9;&#x529F;&#x80FD;&#x51FD;&#x6570;&#x3001;&#x65E5;&#x5FD7;&#x3001;libevent&#x6846;&#x67B6;&#x3001;&#x5BF9;&#x7CFB;&#x7EDF;IO&#x591A;&#x8DEF;&#x590D;&#x7528;&#x673A;&#x5236;&#x7684;&#x5C01;&#x88C5;&#x3001;&#x4FE1;&#x53F7;&#x7BA1;&#x7406;&#x3001;&#x5B9A;&#x65F6;&#x4E8B;&#x4EF6;&#x7BA1;&#x7406;&#x3001;&#x7F13;&#x51B2;&#x533A;&#x7BA1;&#x7406;&#x3001;&#x57FA;&#x672C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x548C;&#x57FA;&#x4E8E;libevent&#x7684;&#x4E24;&#x4E2A;&#x5B9E;&#x7528;&#x5E93;&#x7B49;&#x51E0;&#x90E8;&#x5206;&#x3002;","keywords":null,"text":"&#x6E90;&#x4EE3;&#x7801;&#x7EC4;&#x7EC7;&#x7ED3;&#x6784;libevent&#x5E93;&#x4E3B;&#x8981;&#x5206;&#x4E3A;&#xFF1A;&#x5934;&#x6587;&#x4EF6;&#x3001;&#x8F85;&#x52A9;&#x529F;&#x80FD;&#x51FD;&#x6570;&#x3001;&#x65E5;&#x5FD7;&#x3001;libevent&#x6846;&#x67B6;&#x3001;&#x5BF9;&#x7CFB;&#x7EDF;IO&#x591A;&#x8DEF;&#x590D;&#x7528;&#x673A;&#x5236;&#x7684;&#x5C01;&#x88C5;&#x3001;&#x4FE1;&#x53F7;&#x7BA1;&#x7406;&#x3001;&#x5B9A;&#x65F6;&#x4E8B;&#x4EF6;&#x7BA1;&#x7406;&#x3001;&#x7F13;&#x51B2;&#x533A;&#x7BA1;&#x7406;&#x3001;&#x57FA;&#x672C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x548C;&#x57FA;&#x4E8E;libevent&#x7684;&#x4E24;&#x4E2A;&#x5B9E;&#x7528;&#x5E93;&#x7B49;&#x51E0;&#x90E8;&#x5206;&#x3002; &#x5934;&#x6587;&#x4EF6;&#x4E3B;&#x8981;&#x5C31;&#x662F;event.h&#xFF1A;&#x4E8B;&#x4EF6;&#x5B8F;&#x5B9A;&#x4E49;&#x3001;&#x63A5;&#x53E3;&#x51FD;&#x6570;&#x58F0;&#x660E;&#xFF0C;&#x4E3B;&#x8981;&#x7ED3;&#x6784;&#x4F53;event&#x7684;&#x58F0;&#x660E; &#x5185;&#x90E8;&#x5934;&#x6587;&#x4EF6;xxx-internal.h&#xFF1A;&#x5185;&#x90E8;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x548C;&#x51FD;&#x6570;&#xFF0C;&#x5BF9;&#x5916;&#x4E0D;&#x53EF;&#x89C1;&#xFF0C;&#x4EE5;&#x8FBE;&#x5230;&#x4FE1;&#x606F;&#x9690;&#x85CF;&#x7684;&#x76EE;&#x7684; libevent&#x6846;&#x67B6;event.c&#xFF1A;event&#x6574;&#x4F53;&#x6846;&#x67B6;&#x7684;&#x4EE3;&#x7801;&#x5B9E;&#x73B0; &#x5BF9;&#x7CFB;&#x7EDF;IO&#x591A;&#x8DEF;&#x590D;&#x7528;&#x673A;&#x5236;&#x7684;&#x5C01;&#x88C5;(Linux&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;epoll)epoll.c&#xFF1A;&#x5BF9;epoll&#x7684;&#x5C01;&#x88C5; 1). epoll_init(event_base_new, event_init) 2). epoll_changelist_add/epoll_nochangelist_add(event_add) 3). epoll_dispatch 4). epoll_changelist_del/epoll_nochangelist_del(&#x5728;evmap_io_del&#x4E2D;&#x88AB;&#x8C03;&#x7528;) 5). epoll_dealloc(&#x5728;event_base_free&#x4E2D;&#x88AB;&#x8C03;&#x7528;) poll.c&#xFF1A;&#x5BF9;poll&#x7684;&#x5C01;&#x88C5; select.c&#xFF1A;&#x5BF9;select&#x7684;&#x5C01;&#x88C5; devpoll.c&#xFF1A;&#x5BF9;/dev/poll&#x7684;&#x5C01;&#x88C5; kqueue.c&#xFF1A;&#x5BF9;kqueue&#x7684;&#x5C01;&#x88C5; &#x5B9A;&#x65F6;&#x4E8B;&#x4EF6;&#x7BA1;&#x7406;min-heap.h&#xFF1A;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x4EE5;&#x65F6;&#x95F4;&#x4F5C;&#x4E3A;key&#x7684;&#x5C0F;&#x6839;&#x5806;&#x7ED3;&#x6784; &#x4FE1;&#x53F7;&#x7BA1;&#x7406;signal.c&#xFF1A;&#x5BF9;&#x4FE1;&#x53F7;&#x4E8B;&#x4EF6;&#x7684;&#x5904;&#x7406; &#x8F85;&#x52A9;&#x529F;&#x80FD;&#x51FD;&#x6570;evutil.h&#x548C;evutil.c&#xFF1A;&#x4E00;&#x4E9B;&#x8F85;&#x52A9;&#x529F;&#x80FD;&#x51FD;&#x6570;&#xFF0C;&#x5305;&#x62EC;&#x521B;&#x5EFA;socket pair&#x548C;&#x4E00;&#x4E9B;&#x65F6;&#x95F4;&#x64CD;&#x4F5C;&#x51FD;&#x6570;&#xFF1A;&#x52A0;&#x3001;&#x51CF;&#x548C;&#x6BD4;&#x8F83;&#x7B49; &#x65E5;&#x5FD7;log.h&#x548C;log.c&#xFF1A;log&#x65E5;&#x5FD7;&#x51FD;&#x6570; &#x7F13;&#x51B2;&#x533A;&#x7BA1;&#x7406;evbuffer.c&#x548C;buffer.c&#xFF1A;libevent&#x5BF9;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x5C01;&#x88C5; &#x57FA;&#x672C;&#x6570;&#x636E;&#x7ED3;&#x6784;compact/sys&#x4E0B;&#x7684;&#x4E24;&#x4E2A;&#x6E90;&#x6587;&#x4EF6;&#xFF1A;queue.h&#x662F;libevent&#x57FA;&#x672C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5305;&#x62EC;&#x94FE;&#x8868;&#xFF0C;&#x53CC;&#x5411;&#x94FE;&#x8868;&#xFF0C;&#x961F;&#x5217;&#x7B49;&#x3002; &#x7F51;&#x7EDC;&#x5E93;http&#x548C;evdns&#xFF1A;&#x662F;&#x57FA;&#x4E8E;libevent&#x5B9E;&#x73B0;&#x7684;http&#x670D;&#x52A1;&#x5668;&#x548C;&#x5F02;&#x6B65;dns&#x67E5;&#x8BE2;&#x5E93; &#x6E90;&#x7801;&#x5206;&#x6790;Reactor &#x2014; &#x53CD;&#x5E94;&#x5668;&#x5178;&#x578B;&#x7684;Reactor&#x58F0;&#x660E;&#x65B9;&#x5F0F;&#xFF0C;&#x53CD;&#x5E94;&#x5668;&#x65F6;&#x4E8B;&#x4EF6;&#x7BA1;&#x7406;&#x7684;&#x63A5;&#x53E3; 1234567class Reactor {public: int register_handler(EventHandler *handler, int event); int remove_handler(EventHandler *handler, int event); void handle_events(timeval *tv); // ...} &#x5728;libevent&#x4E2D;&#x5C31;&#x662F;event_base&#x7ED3;&#x6784;&#x4F53;, event_base&#x662F;&#x4E00;&#x7EC4;event&#x7684;&#x96C6;&#x5408; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126/* event-internal.h */struct event_base { /** Function pointers and other data to describe this event_base&apos;s * backend. */ const struct eventop *evsel; /** Pointer to backend-specific data. */ void *evbase; /** List of changes to tell backend about at next dispatch. Only used * by the O(1) backends. */ struct event_changelist changelist; /** Function pointers used to describe the backend that this event_base * uses for signals */ const struct eventop *evsigsel; /** Data to implement the common signal handelr code. */ struct evsig_info sig; /** Number of virtual events */ int virtual_event_count; /** Number of total events added to this event_base */ int event_count; /** Number of total events active in this event_base */ int event_count_active; /** Set if we should terminate the loop once we&apos;re done processing * events. */ int event_gotterm; /** Set if we should terminate the loop immediately */ int event_break; /** Set if we should start a new instance of the loop immediately. */ int event_continue; /** The currently running priority of events */ int event_running_priority; /** Set if we&apos;re running the event_base_loop function, to prevent * reentrant invocation. */ int running_loop; /* Active event management. */ /** An array of nactivequeues queues for active events (ones that * have triggered, and whose callbacks need to be called). Low * priority numbers are more important, and stall higher ones. */ struct event_list *activequeues; /** The length of the activequeues array */ int nactivequeues; /* common timeout logic */ /** An array of common_timeout_list* for all of the common timeout * values we know. */ struct common_timeout_list **common_timeout_queues; /** The number of entries used in common_timeout_queues */ int n_common_timeouts; /** The total size of common_timeout_queues. */ int n_common_timeouts_allocated; /** List of defered_cb that are active. We run these after the active * events. */ struct deferred_cb_queue defer_queue; /** Mapping from file descriptors to enabled (added) events */ struct event_io_map io; /** Mapping from signal numbers to enabled (added) events. */ struct event_signal_map sigmap; /** All events that have been enabled (added) in this event_base */ struct event_list eventqueue; /** Stored timeval; used to detect when time is running backwards. */ struct timeval event_tv; /** Priority queue of events with timeouts. */ struct min_heap timeheap; /** Stored timeval: used to avoid calling gettimeofday/clock_gettime * too often. */ struct timeval tv_cache;#if defined(_EVENT_HAVE_CLOCK_GETTIME) &amp;&amp; defined(CLOCK_MONOTONIC) /** Difference between internal time (maybe from clock_gettime) and * gettimeofday. */ struct timeval tv_clock_diff; /** Second in which we last updated tv_clock_diff, in monotonic time. */ time_t last_updated_clock_diff;#endif#ifndef _EVENT_DISABLE_THREAD_SUPPORT /* threading support */ /** The thread currently running the event_loop for this base */ unsigned long th_owner_id; /** A lock to prevent conflicting accesses to this event_base */ void *th_base_lock; /** The event whose callback is executing right now */ struct event *current_event; /** A condition that gets signalled when we&apos;re done processing an * event with waiters on it. */ void *current_event_cond; /** Number of threads blocking on current_event_cond. */ int current_event_waiters;#endif#ifdef WIN32 /** IOCP support structure, if IOCP is enabled. */ struct event_iocp_port *iocp;#endif /** Flags that this base was configured with */ enum event_base_config_flag flags; /* Notify main thread to wake up break, etc. */ /** True if the base already has a pending notify, and we don&apos;t need * to add any more. */ int is_notify_pending; /** A socketpair used by some th_notify functions to wake up the main * thread. */ evutil_socket_t th_notify_fd[2]; /** An event used by some th_notify functions to wake up the main * thread. */ struct event th_notify; /** A function used to wake up the main thread from another thread. */ int (*th_notify_fn)(struct event_base *base);}; EventHandler &#x2014; &#x4E8B;&#x4EF6;&#x5904;&#x7406;&#x7A0B;&#x5E8F;event&#x662F;&#x6574;&#x4E2A;libevent&#x5E93;&#x7684;&#x6838;&#x5FC3;&#xFF0C;&#x662F;Reactor&#x6846;&#x67B6;&#x4E2D;&#x7684;&#x4E8B;&#x4EF6;&#x5904;&#x7406;&#x7A0B;&#x5E8F;&#x7EC4;&#x4EF6;&#xFF0C;&#x5B83;&#x63D0;&#x4F9B;&#x4E86;&#x51FD;&#x6570;&#x63A5;&#x53E3;&#xFF0C;&#x4F9B;Reactor&#x5728;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x65F6;&#x8C03;&#x7528;&#xFF0C;&#x4EE5;&#x6267;&#x884C;&#x76F8;&#x5E94;&#x7684;&#x4E8B;&#x4EF6;&#x5904;&#x7406;&#xFF0C;&#x901A;&#x5E38;&#x5B83;&#x4F1A;&#x7ED1;&#x5B9A;&#x4E00;&#x4E2A;&#x6709;&#x6548;&#x7684;&#x53E5;&#x67C4;&#x3002; 12345678910111213141516171819202122232425262728293031323334353637383940/* include/event2/event_struct.h */struct event { TAILQ_ENTRY(event) ev_active_next; TAILQ_ENTRY(event) ev_next; /* for managing timeouts */ union { TAILQ_ENTRY(event) ev_next_with_common_timeout; int min_heap_idx; } ev_timeout_pos; evutil_socket_t ev_fd; struct event_base *ev_base; union { /* used for io events */ struct { TAILQ_ENTRY(event) ev_io_next; struct timeval ev_timeout; } ev_io; /* used by signal events */ struct { TAILQ_ENTRY(event) ev_signal_next; short ev_ncalls; /* Allows deletes in callback */ short *ev_pncalls; } ev_signal; } _ev; short ev_events; short ev_res; /* result passed to event callback */ short ev_flags; ev_uint8_t ev_pri; /* smaller numbers are higher priority */ ev_uint8_t ev_closure; struct timeval ev_timeout; /* allows us to adopt for different types of events */ void (*ev_callback)(evutil_socket_t, short, void *arg); void *ev_arg;}; &#x5B8F;&#x5C55;&#x5F00;&#x540E;&#x4E3A;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839struct event { struct { struct event *tqe_next; struct event **tqe_prev; } ev_active_next; struct { struct event *tqe_next; struct event **tqe_prev; } ev_next; union { struct { struct event *tqe_next; struct event **tqe_prev; } ev_next_with_common_timeout; int min_heap_idx; } ev_timeout_pos; int ev_fd; struct event_base *ev_base; union { struct { struct { struct event *tqe_next; struct event **tqe_prev; } ev_io_next; struct timeval ev_timeout; } ev_io; struct { struct { struct event *tqe_next; struct event **tqe_prev; } ev_signal_next; short ev_ncalls; short *ev_pncalls; } ev_signal; } _ev; short ev_events; short ev_res; short ev_flags; uint8_t ev_pri; uint8_t ev_closure; struct timeval ev_timeout; void (*ev_callback)(int, short, void *arg); void *ev_arg;}; Signal1234567891011121314151617181920struct evsig_info { /* Event watching ev_signal_pair[1] */ struct event ev_signal; /* Socketpair used to send notifications from the signal handler */ evutil_socket_t ev_signal_pair[2]; /* True iff we&apos;ve added the ev_signal event yet. */ int ev_signal_added; /* Count of the number of signals we&apos;re currently watching. */ int ev_n_signals_added; /* Array of previous signal handler objects before Libevent started * messing with them. Used to restore old signal handlers. */#ifdef _EVENT_HAVE_SIGACTION struct sigaction **sh_old;#else ev_sighandler_t **sh_old;#endif /* Size of sh_old. */ int sh_old_max;}; event_listev_map.c&#x4E2D;&#x7684;evmap_io&#x4E2D;&#x7528;&#x5230;&#x4E86;event_list&#x7ED3;&#x6784;&#xFF0C;event_list&#x5728;event_struct.h&#x7684;&#x7ED3;&#x6784;&#x662F;: 123456789TAILQ_HEAD (event_list, event);#ifndef TAILQ_HEAD#define _EVENT_DEFINED_TQHEAD#define TAILQ_HEAD(name, type) \\struct name { \\ struct type *tqh_first; \\ struct type **tqh_last; \\}#endif &#x4F7F;&#x7528;cpp&#x6216;&#x8005;gcc -E&#x5C55;&#x5F00;&#x540E;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#xFF1A; 12345struct event_list{ struct event *tqh_first; struct event **tqh_last;};","raw":null,"content":null,"categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://zealoussnow.github.io/categories/程序设计/"}],"tags":[{"name":"C","slug":"C","permalink":"https://zealoussnow.github.io/tags/C/"}]},{"title":"C++程序构建工具","slug":"build-tools","date":"2016-04-29T09:40:45.000Z","updated":"2016-04-29T09:43:02.560Z","comments":true,"path":"2016/04/29/build-tools/","link":"","permalink":"https://zealoussnow.github.io/2016/04/29/build-tools/","excerpt":"depot_tools gyp Linux123export GYP_GENERATORS=make,ninjamakeninja -C out/Default","keywords":null,"text":"depot_tools gyp Linux123export GYP_GENERATORS=make,ninjamakeninja -C out/Default Windows12set GYP_MSVS_VERSION=2015set GYP_GENERATORS=msvs,ninja gyp&#x652F;&#x6301;&#x7684;&#x672C;&#x5730;&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#x6709;&#xFF1A;cmake,eclipse,make,msvs,ninja,xcode &#x5728;windows&#x4E0B;&#x8BA9;cmake&#x751F;&#x6210;makefile&#x5FC5;&#x987B;&#x7528;gnu makefile&#x3002; &#x53C2;&#x8003;Hello GYPHello NinjaHello CMake","raw":null,"content":null,"categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://zealoussnow.github.io/categories/程序设计/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://zealoussnow.github.io/tags/C/"}]},{"title":"Boost学习 —— algorithm","slug":"boost-algorithm","date":"2016-04-29T09:36:10.000Z","updated":"2016-04-29T09:39:42.788Z","comments":true,"path":"2016/04/29/boost-algorithm/","link":"","permalink":"https://zealoussnow.github.io/2016/04/29/boost-algorithm/","excerpt":"Searching AlgorithmsBoyer-Moore Search(boyer_moore.hpp)(1). Interface For flexibility, the Boyer-Moore algorithm has two interfaces:","keywords":null,"text":"Searching AlgorithmsBoyer-Moore Search(boyer_moore.hpp)(1). Interface For flexibility, the Boyer-Moore algorithm has two interfaces: A object-based interface 123456789template&lt;typename patIter&gt;class boyer_moore {public: boyer_moore(patIter first, patIter last); ~boyter_moore(); template&lt;typename corpusIter&gt; corpusIter operator()(corpusIter corpus_first, corpusIter corpus_last);}; A procedural one 1234template&lt;typename patIter, typename corpusIter&gt;corpusIter boyer_moore_search( corpusIter corpus_first, corpusIter corpus_last, patIter first, patIter last); (2). Performance (3). Memory Use The algorithm allocates two internal tables The first one is proportional to the length of the pattern The second one has one entry for each member of the &#x201C;alphabet&#x201D;in the pattern. For (8-bit) character types, this table contains 256 entries.","raw":null,"content":null,"categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://zealoussnow.github.io/categories/程序设计/"}],"tags":[{"name":"C++ Boost","slug":"C-Boost","permalink":"https://zealoussnow.github.io/tags/C-Boost/"}]},{"title":"C++11 —— override和final","slug":"c++11-tutor","date":"2016-04-29T09:30:32.000Z","updated":"2016-04-29T09:34:20.880Z","comments":true,"path":"2016/04/29/c++11-tutor/","link":"","permalink":"https://zealoussnow.github.io/2016/04/29/c++11-tutor/","excerpt":"override &#x591A;&#x6001;&#x884C;&#x4E3A;&#x7684;&#x57FA;&#x7840;&#xFF1A;&#x57FA;&#x7C7B;&#x58F0;&#x660E;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x6D3E;&#x751F;&#x7C7B;&#x58F0;&#x660E;&#x4E00;&#x4E2A;&#x865A;&#x51FD;&#x6570;&#x8986;&#x5199;&#x8BE5;&#x865A;&#x51FD;&#x6570; &#x8986;&#x76D6;&#x8981;&#x6C42;&#xFF1A;&#x51FD;&#x6570;&#x7B7E;&#x540D;&#x4E00;&#x81F4;(&#x51FD;&#x6570;&#x7B7E;&#x540D;&#x5305;&#x62EC;&#xFF1A;&#x51FD;&#x6570;&#x540D;&#x3001;&#x53C2;&#x6570;&#x5217;&#x8868;&#x3001;const)","keywords":null,"text":"override &#x591A;&#x6001;&#x884C;&#x4E3A;&#x7684;&#x57FA;&#x7840;&#xFF1A;&#x57FA;&#x7C7B;&#x58F0;&#x660E;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x6D3E;&#x751F;&#x7C7B;&#x58F0;&#x660E;&#x4E00;&#x4E2A;&#x865A;&#x51FD;&#x6570;&#x8986;&#x5199;&#x8BE5;&#x865A;&#x51FD;&#x6570; &#x8986;&#x76D6;&#x8981;&#x6C42;&#xFF1A;&#x51FD;&#x6570;&#x7B7E;&#x540D;&#x4E00;&#x81F4;(&#x51FD;&#x6570;&#x7B7E;&#x540D;&#x5305;&#x62EC;&#xFF1A;&#x51FD;&#x6570;&#x540D;&#x3001;&#x53C2;&#x6570;&#x5217;&#x8868;&#x3001;const) &#x6D3E;&#x751F;&#x7C7B;&#x5E0C;&#x671B;&#x8986;&#x5199;&#x57FA;&#x7C7B;&#x7684;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x4F46;&#x662F;&#x865A;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x4E0D;&#x540C;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;1234567891011class Base{public: virtual void f(int) { cout &lt;&lt; &quot;f in base&quot; &lt;&lt; endl; }};class Derived : public Base{public: virtual void f(short) { cout &lt;&lt; &quot;f in derived&quot; &lt;&lt; endl; }}; &#x867D;&#x7136;&#x6D3E;&#x751F;&#x7C7B;Derived&#x7EE7;&#x627F;&#x4E86;&#x57FA;&#x7C7B;Base&#x5E76;&#x5E0C;&#x671B;&#x8986;&#x5199;&#x51FD;&#x6570;f&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x6D3E;&#x751F;&#x7C7B;&#x4E2D;&#xFF0C;f&#x7684;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x4E0E;&#x57FA;&#x7C7B;&#x5E76;&#x4E0D;&#x76F8;&#x540C;&#xFF0C;&#x6B64;&#x65F6;&#x6D3E;&#x751F;&#x7C7B;&#x53EA;&#x662F;&#x5B58;&#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x540C;&#x540D;&#x7684;&#x51FD;&#x6570;f&#x3002;&#x5F53;&#x901A;&#x8FC7;Base&#x7C7B;&#x578B;&#x7684;&#x6307;&#x9488;&#x6307;&#x5411;Derived&#x7C7B;&#x578B;&#x65F6;&#xFF0C;&#x8C03;&#x7528;&#x51FD;&#x6570;f&#x53EA;&#x4F1A;&#x6253;&#x5370;&#x51FA;&#x201D;f in base&#x201D;&#x3002; &#x6D3E;&#x751F;&#x7C7B;&#x5E0C;&#x671B;&#x8986;&#x5199;&#x57FA;&#x7C7B;&#x7684;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x57FA;&#x7C7B;&#x4E2D;&#x7684;&#x865A;&#x51FD;&#x6570;&#x662F;const&#x7684;&#xFF0C;&#x6D3E;&#x751F;&#x7C7B;&#x5374;&#x4E0D;&#x662F;1234567891011class Base{public: virtual void f() const { cout &lt;&lt; &quot;f in base&quot; &lt;&lt; endl; }};class Derived : public Base{public: virtual void f() { cout &lt;&lt; &quot;f in derived&quot; &lt;&lt; endl; }}; &#x540C;&#x6837;&#xFF0C;&#x6B64;&#x65F6;&#x57FA;&#x7C7B;&#x4E5F;&#x6CA1;&#x6709;&#x8986;&#x5199;&#x51FD;&#x6570;f&#x3002; overried&#x6807;&#x8BC6;&#x7B26;123456789101112class Base{public: virtual void f() const { cout &lt;&lt; &quot;f in base&quot; &lt;&lt; endl; }};class Derived : public Base{public: // void f() override // error: &apos;void Derived::f()&apos; marked &apos;override&apos;, but does not override void f() const override { cout &lt;&lt; &quot;f in derived&quot; &lt;&lt; endl; }}; &#x5728;&#x6D3E;&#x751F;&#x7C7B;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528;&#x4E86;&#x6807;&#x8BC6;&#x7B26;overried&#x6765;&#x660E;&#x786E;&#x8BF4;&#x660E;&#x8981;&#x8986;&#x5199;&#x57FA;&#x7C7B;&#x4E2D;&#x7684;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x6B64;&#x65F6;&#x82E5;&#x4E0D;&#x52A0;const&#x6216;&#x8005;&#x53C2;&#x6570;&#x5217;&#x8868;&#x4E0E;&#x57FA;&#x7C7B;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x5C31;&#x4F1A;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x63D0;&#x793A;&#x9519;&#x8BEF;&#x3002; final &#x8BA9;&#x57FA;&#x7C7B;&#x4E0D;&#x5141;&#x8BB8;&#x88AB;&#x7EE7;&#x627F; &#x5E0C;&#x671B;&#x51FD;&#x6570;&#x4E0D;&#x8981;&#x518D;&#x88AB;&#x6D3E;&#x751F;&#x7C7B;&#x8FDB;&#x4E00;&#x6B65;&#x91CD;&#x5199;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x57FA;&#x7C7B;&#x6216;&#x8005;&#x6D3E;&#x751F;&#x7C7B;&#x4E2D;&#x4F7F;&#x7528;final&#x3002;&#x5728;&#x6D3E;&#x751F;&#x7C7B;&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x4F7F;&#x7528;overried&#x548C;final &#x8BA9;&#x57FA;&#x7C7B;&#x4E0D;&#x5141;&#x8BB8;&#x88AB;&#x7EE7;&#x627F;123class Base final { };class Derived : public Base { }; &#x6B64;&#x65F6;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x63D0;&#x793A;Derived&#x7C7B;&#x65E0;&#x6CD5;&#x4ECE;Base&#x7C7B;&#x7EE7;&#x627F;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5DF2;&#x7ECF;&#x88AB;&#x58F0;&#x660E;&#x4E3A;final &#x5E0C;&#x671B;&#x51FD;&#x6570;&#x4E0D;&#x8981;&#x518D;&#x88AB;&#x6D3E;&#x751F;&#x7C7B;&#x8FDB;&#x4E00;&#x6B65;&#x91CD;&#x5199;1234567891011class Base{public: virtual void f() final { cout &lt;&lt; &quot;f in base&quot; &lt;&lt; endl; }};class Derived : public Base{public: virtual void f() { cout &lt;&lt; &quot;f in derived&quot; &lt;&lt; endl; }}; &#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x63D0;&#x793A;Base&#x4E2D;&#x7684;f&#x58F0;&#x660E;&#x4E3A;final&#x7684;&#x51FD;&#x6570;&#x65E0;&#x6CD5;&#x88AB;Derived&#x4E2D;&#x7684;f&#x91CD;&#x5199; 1234567891011121314151617class Base{public: virtual void f() { cout &lt;&lt; &quot;f in base&quot; &lt;&lt; endl; }};class Derived : public Base{public: virtual void f() override final { cout &lt;&lt; &quot;f in derived&quot; &lt;&lt; endl; }};class SecondDerived : public Derived{public: virtual void f() override { cout &lt;&lt; &quot;f in second derived&quot; &lt;&lt; endl; }}; &#x6B64;&#x65F6;Derived&#x4E2D;&#x58F0;&#x660E;&#x4E3A;fianl&#x7684;&#x51FD;&#x6570;&#x65E0;&#x6CD5;&#x88AB;SecondDerived&#x4E2D;&#x7684;f&#x91CD;&#x5199;&#x3002; &#x6CE8;&#x610F;&#x867D;&#x7136;override&#x548C;final&#x4E0D;&#x662F;C++&#x7684;&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x6211;&#x4EEC;&#x7528;&#x5230;C++11&#x7684;&#x8FD9;&#x4E24;&#x4E2A;&#x7279;&#x6027;&#x65F6;&#xFF0C;&#x4E3A;&#x4E86;&#x9632;&#x6B62;&#x4EA7;&#x751F;&#x6B67;&#x4E49;&#x3002;","raw":null,"content":null,"categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://zealoussnow.github.io/categories/程序设计/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://zealoussnow.github.io/tags/C/"}]},{"title":"如何释放vector的闲置空间","slug":"release-free-space-of-vector","date":"2016-04-29T09:17:35.000Z","updated":"2016-04-29T09:23:02.799Z","comments":true,"path":"2016/04/29/release-free-space-of-vector/","link":"","permalink":"https://zealoussnow.github.io/2016/04/29/release-free-space-of-vector/","excerpt":"std::vector&#x7684;&#x5BB9;&#x91CF;&#x64CD;&#x4F5C;C++ STL&#x5BB9;&#x5668;vector&#x5BF9;&#x4E8E;&#x5BB9;&#x91CF;&#x7684;&#x64CD;&#x4F5C;&#x662F;&#x53EA;&#x589E;&#x4E0D;&#x51CF;&#xFF0C;&#x5982;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF1A; 123456789101112131415vector&lt;int&gt; v;v.push_back(12); // capacity: 1v.push_back(22);// capacity: 1 * 2 = 2v.push_back(32);// capacity: 2 * 2 = 4cout &lt;&lt; v.capacity() &lt;&lt; endl; // 4v.insert(v.begin(), 12, 86);cout &lt;&lt; v.capacity() &lt;&lt; endl; // 15// &#x5220;&#x9664;&#x7B2C; 3 &#x4E2A;&#x5230;&#x5012;&#x6570;&#x7B2C; 2 &#x4E2A;&#x5143;&#x7D20;&#xFF08;&#x4E0D;&#x542B;&#xFF09;&#x4E4B;&#x95F4;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;v.erase(v.begin() + 2, v.end() &#xAD;- 2);cout &lt;&lt; v.size() &lt;&lt; endl; // size: 4cout &lt;&lt; v.capacity() &lt;&lt; endl; // 15 &lt;&#xAD;&#xAD;&#xAD; #1v.clear();cout &lt;&lt; v.capacity() &lt;&lt; endl; // 15 &lt;&#xAD;&#xAD;&#xAD; #2v.reserve(0);cout &lt;&lt; v.capacity() &lt;&lt; endl; // 15 &lt;&#xAD;&#xAD;&#xAD; #3","keywords":null,"text":"std::vector&#x7684;&#x5BB9;&#x91CF;&#x64CD;&#x4F5C;C++ STL&#x5BB9;&#x5668;vector&#x5BF9;&#x4E8E;&#x5BB9;&#x91CF;&#x7684;&#x64CD;&#x4F5C;&#x662F;&#x53EA;&#x589E;&#x4E0D;&#x51CF;&#xFF0C;&#x5982;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF1A; 123456789101112131415vector&lt;int&gt; v;v.push_back(12); // capacity: 1v.push_back(22);// capacity: 1 * 2 = 2v.push_back(32);// capacity: 2 * 2 = 4cout &lt;&lt; v.capacity() &lt;&lt; endl; // 4v.insert(v.begin(), 12, 86);cout &lt;&lt; v.capacity() &lt;&lt; endl; // 15// &#x5220;&#x9664;&#x7B2C; 3 &#x4E2A;&#x5230;&#x5012;&#x6570;&#x7B2C; 2 &#x4E2A;&#x5143;&#x7D20;&#xFF08;&#x4E0D;&#x542B;&#xFF09;&#x4E4B;&#x95F4;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;v.erase(v.begin() + 2, v.end() &#xAD;- 2);cout &lt;&lt; v.size() &lt;&lt; endl; // size: 4cout &lt;&lt; v.capacity() &lt;&lt; endl; // 15 &lt;&#xAD;&#xAD;&#xAD; #1v.clear();cout &lt;&lt; v.capacity() &lt;&lt; endl; // 15 &lt;&#xAD;&#xAD;&#xAD; #2v.reserve(0);cout &lt;&lt; v.capacity() &lt;&lt; endl; // 15 &lt;&#xAD;&#xAD;&#xAD; #3 &#x7531;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x4E0D;&#x8BBA;&#x662F;&#x5220;&#x9664;vector&#x4E2D;&#x7684;&#x5143;&#x7D20;(#1)&#x3001;&#x751A;&#x81F3;clear&#x6574;&#x4E2A;&#x5BB9;&#x5668;&#x7684;&#x5185;&#x5BB9;(#2)&#x3001;&#x6216;&#x663E;&#x5F0F;&#x5C06;capacity&#x4FDD;&#x7559;&#x4E3A;0(#3)&#xFF0C;&#x90FD;&#x65E0;&#x6CD5;&#x51CF;&#x5C0F;vector&#x4E2D;&#x95F2;&#x7F6E;&#x7684;&#x7A7A;&#x95F4;&#x3002; std::vector&#x590D;&#x5236;&#x6784;&#x9020;&#x4E0D;&#x4F1A;&#x590D;&#x5236;capacity&#x5982;&#x4E0B;&#x5217;&#x4EE3;&#x7801;: 12345678910vector&lt;int&gt; v2;v2.push_back(12);v2.push_back(28);cout &lt;&lt; v2.capacity() &lt;&lt; endl; // 2v2.reserve(120);cout &lt;&lt; v2.capacity() &lt;&lt; endl; // 120cout &lt;&lt; v2.size() &lt;&lt; endl; // 2vector&lt;int&gt; v3(v2);cout &lt;&lt; v3.capacity() &lt;&lt; endl; // 2 &lt;&#xAD;&#xAD; #1cout &lt;&lt; v3.size() &lt;&lt; endl; // 2 &#x5982;&#x4E0A;&#x6240;&#x793A;&#xFF0C;v3&#x7684;capacity&#x53EA;&#x662F;2(#2)&#xFF0C;&#x5373;v2&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x4E2A;&#x6570;&#x3002; &#x901A;&#x8FC7;&#x590D;&#x5236;&#x6784;&#x9020;&#x548C;swap&#x6765;&#x91CA;&#x653E;vector&#x5BB9;&#x5668;&#x95F2;&#x7F6E;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x5982;&#x4E0B;&#x5217;&#x4EE3;&#x7801;&#xFF1A; 123456789vector&lt;int&gt; v2;v2.push_back(12);v2.push_back(28);cout &lt;&lt; v2.capacity() &lt;&lt; endl; // 2v2.reserve(120);cout &lt;&lt; v2.capacity() &lt;&lt; endl; // 120cout &lt;&lt; v2.size() &lt;&lt; endl; // 2vector&lt;int&gt; (v2).swap(v2); // &lt;&#xAD;&#xAD; #1cout &lt;&lt; v2.capacity() &lt;&lt; endl; // 2 &lt;&#xAD;&#xAD; #2 &#x4E3A;&#x4EC0;&#x4E48;&#x53EF;&#x4EE5;&#x51CF;&#x5C0F;v2&#x7684;capacity&#xFF1F; vector(v2)&#x8C03;&#x7528;vector&#x7684;&#x590D;&#x5236;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x7528;v2&#x7684;&#x5143;&#x7D20;&#x6765;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x3001;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;(&#x65E0;&#x540D;&#x5BF9;&#x8C61;) &#x7531;&#x4E8E;&#x662F;&#x590D;&#x5236;&#x6784;&#x9020;&#xFF0C;&#x6240;&#x4EE5;&#x65B0;&#x7684;&#x3001;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x7684;capacity&#x662F;v2&#x7684;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x4E3A;2 &#x7531;&#x4E8E;&#x6210;&#x5458;&#x51FD;&#x6570;swap()&#x4EA4;&#x6362;&#x4E24;&#x4E2A;&#x5BB9;&#x5668;&#x7684;&#x4E00;&#x5207;&#xFF1A;&#x5305;&#x62EC;&#x6240;&#x6709;&#x8FED;&#x4EE3;&#x5668;&#x3001;size&#x3001;&#x6240;&#x6709;&#x5143;&#x7D20;&#x751A;&#x81F3;capacity &#x7ECF;&#x8FC7; swap()&#x540E;&#xFF0C;v2&#x7684;capacity&#x53D8;&#x6210;&#x65B0;&#x7684;&#x3001;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x7684;capacity&#xFF0C;&#x5373;2&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#xFF1A;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x7684;capacity&#x53D8;&#x6210;120 &#x7531;&#x4E8E;vector(v2)&#x521B;&#x5EFA;&#x7684;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x5728;vector(v2).swap(v2);&#x8FD9;&#x4E2A;&#x8BED;&#x53E5;&#x7ED3;&#x675F;&#x540E;&#x9500;&#x6BC1;&#xFF0C;&#x81F3;&#x6B64;v2&#x7684;capacity&#x4E3A;2&#xFF0C;&#x539F;&#x5148;&#x95F2;&#x7F6E;&#x7684;&#x7A7A;&#x95F4;(120-2&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x7A7A;&#x95F4;)&#x88AB;&#x91CA;&#x653E;(&#x968F;&#x7740;&#x4E34;&#x65F6;&#x5BB9;&#x5668;&#x5BF9;&#x8C61;&#x7684;&#x9500;&#x6BC1;&#x800C;&#x91CA;&#x653E;)&#x3002; &#x540C;&#x7406;&#xFF0C;&#x5B8C;&#x5168;&#x6E05;&#x9664;&#x4E00;&#x4E2A;vector&#x7684;&#x6240;&#x6709;&#x5B58;&#x50A8;&#xFF1A; 123456789vector&lt;int&gt; v2;v2.push_back(12);v2.push_back(28);cout &lt;&lt; v2.capacity() &lt;&lt; endl; // 2v2.reserve(120);cout &lt;&lt; v2.capacity() &lt;&lt; endl; // 120cout &lt;&lt; v2.size() &lt;&lt; endl; // 2vector&lt;int&gt; ().swap(v2); // &lt;&#xAD;&#xAD; #1cout &lt;&lt; v2.capacity() &lt;&lt; endl; // &lt;&#xAD;&#xAD; #2 (#1) &#x9996;&#x5148;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;(&#x7A7A;) &#x5BB9;&#x5668;&#xFF0C;&#x7136;&#x540E;&#x4E0E;v2&#x8FDB;&#x884C;swap() &#x53C2;&#x8003;&#x94FE;&#x63A5;&#xFF1A;&#x5982;&#x4F55;&#x91CA;&#x653E; Vector &#x5BB9;&#x5668;&#x95F2;&#x7F6E;&#x7684;&#x7A7A;&#x95F4; vector&#x7684;insert&#x548C;push_back&#x7684;&#x533A;&#x522B;std::vector::insert(&#x5728;&#x5BB9;&#x5668;&#x7684;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x63D2;&#x5165;&#x5143;&#x7D20;) &#x5982;&#x679C;&#x65B0;&#x7684;size()&#x6BD4;&#x65E7;&#x7684;capacity()&#x5927;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x91CD;&#x65B0;&#x5206;&#x914D;&#x7A7A;&#x95F4;&#x3002;&#x5982;&#x679C;&#x65B0;&#x7684;size()&#x6BD4;capacity()&#x5927;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x8FED;&#x4EE3;&#x5668;&#x548C;&#x5F15;&#x7528;&#x662F;&#x65E0;&#x6548;&#x7684;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x53EA;&#x6709;&#x5728;&#x63D2;&#x5165;&#x4F4D;&#x7F6E;&#x4E4B;&#x524D;&#x4FDD;&#x7559;&#x7684;&#x8FED;&#x4EE3;&#x5668;&#x548C;&#x5F15;&#x7528;&#x662F;&#x6709;&#x6548;&#x7684;&#xFF0C;&#x8D85;&#x8FC7;&#x7ED3;&#x5C3E;&#x7684;&#x8FED;&#x4EE3;&#x5668;&#x540C;&#x6837;&#x662F;&#x65E0;&#x6548;&#x7684;&#x3002;std::vector::push_back(&#x5C06;&#x7ED9;&#x5B9A;&#x7684;&#x5143;&#x7D20;&#x6DFB;&#x52A0;&#x5230;&#x5BB9;&#x5668;&#x7684;&#x672B;&#x5C3E;) &#x65B0;&#x7684;&#x5143;&#x7D20;&#x88AB;&#x7ED9;&#x5B9A;&#x5143;&#x7D20;&#x7684;&#x4E00;&#x4EFD;&#x62F7;&#x8D1D;&#x6240;&#x521D;&#x59CB;&#x5316; &#x7ED9;&#x5B9A;&#x7684;&#x503C;&#x79FB;&#x52A8;&#x5230;&#x65B0;&#x7684;&#x5143;&#x7D20;&#x5F53;&#x4E2D; &#x5982;&#x679C;&#x65B0;&#x7684;size()&#x6BD4;capacity()&#x5927;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x8FED;&#x4EE3;&#x5668;&#x548C;&#x5F15;&#x7528;(&#x5305;&#x62EC;&#x8D85;&#x8FC7;&#x7ED3;&#x5C3E;&#x7684;&#x8FED;&#x4EE3;&#x5668;)&#x662F;&#x65E0;&#x6548;&#x7684;&#xFF0C;&#x5426;&#x5219;&#x53EA;&#x6709;&#x8D85;&#x8FC7;&#x7ED3;&#x5C3E;&#x7684;&#x8FED;&#x4EE3;&#x5668;&#x662F;&#x65E0;&#x6548;&#x7684;&#x3002; &#x53C2;&#x8003;&#x94FE;&#x63A5;&#xFF1A;C++ vector&#x2019;s insert &amp; push_back difference","raw":null,"content":null,"categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://zealoussnow.github.io/categories/程序设计/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://zealoussnow.github.io/tags/C/"}]},{"title":"开发者应该具备的15个编程好习惯","slug":"good-habits","date":"2016-04-29T09:05:54.000Z","updated":"2016-04-29T09:14:22.329Z","comments":true,"path":"2016/04/29/good-habits/","link":"","permalink":"https://zealoussnow.github.io/2016/04/29/good-habits/","excerpt":"&#x52A8;&#x624B;&#x7F16;&#x7801;&#x4E4B;&#x524D;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x5BF9;&#x8981;&#x7F16;&#x7801;&#x5B9E;&#x73B0;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x6709;&#x4E00;&#x4E2A;&#x6B63;&#x5F0F;&#x7684;&#x6216;&#x7C97;&#x7565;&#x7684;&#x8BBE;&#x8BA1;&#x3002;&#x6C38;&#x8FDC;&#x4E0D;&#x8981;&#x5728;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x8BBE;&#x8BA1;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#x5C31;&#x5F00;&#x59CB;&#x7F16;&#x7801;&#xFF0C;&#x9664;&#x975E;&#x6240;&#x7F16;&#x4EE3;&#x7801;&#x4E0D;&#x91CD;&#x8981;&#x3002; &#x4F18;&#x79C0;&#x7684;&#x4EE3;&#x7801;&#x6587;&#x6863;&#x8DDF;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x77E5;&#x8BC6;&#x4E00;&#x6837;&#x91CD;&#x8981;&#x3002;&#x5728;&#x4EE3;&#x7801;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x4E3A;&#x6BCF;&#x4E2A;&#x4E3B;&#x8981;&#x7684;&#x4EE3;&#x7801;&#x6BB5;&#x6DFB;&#x52A0;&#x6CE8;&#x91CA;&#xFF0C;&#x89E3;&#x91CA;&#x4EE3;&#x7801;&#x7684;&#x57FA;&#x672C;&#x903B;&#x8F91;&#x3002;&#x6700;&#x597D;&#x6CE8;&#x660E;&#x7A0B;&#x5E8F;&#x7684;&#x6784;&#x5EFA;&#x548C;&#x4FEE;&#x6539;&#x65E5;&#x671F;&#xFF0C;&#x4EE5;&#x53CA;&#x4FEE;&#x6539;&#x7684;&#x539F;&#x56E0;&#x4E5F;&#x662F;&#x975E;&#x5E38;&#x6709;&#x5FC5;&#x8981;&#x7684;&#x3002;","keywords":null,"text":"&#x52A8;&#x624B;&#x7F16;&#x7801;&#x4E4B;&#x524D;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x5BF9;&#x8981;&#x7F16;&#x7801;&#x5B9E;&#x73B0;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x6709;&#x4E00;&#x4E2A;&#x6B63;&#x5F0F;&#x7684;&#x6216;&#x7C97;&#x7565;&#x7684;&#x8BBE;&#x8BA1;&#x3002;&#x6C38;&#x8FDC;&#x4E0D;&#x8981;&#x5728;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x8BBE;&#x8BA1;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#x5C31;&#x5F00;&#x59CB;&#x7F16;&#x7801;&#xFF0C;&#x9664;&#x975E;&#x6240;&#x7F16;&#x4EE3;&#x7801;&#x4E0D;&#x91CD;&#x8981;&#x3002; &#x4F18;&#x79C0;&#x7684;&#x4EE3;&#x7801;&#x6587;&#x6863;&#x8DDF;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x77E5;&#x8BC6;&#x4E00;&#x6837;&#x91CD;&#x8981;&#x3002;&#x5728;&#x4EE3;&#x7801;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x4E3A;&#x6BCF;&#x4E2A;&#x4E3B;&#x8981;&#x7684;&#x4EE3;&#x7801;&#x6BB5;&#x6DFB;&#x52A0;&#x6CE8;&#x91CA;&#xFF0C;&#x89E3;&#x91CA;&#x4EE3;&#x7801;&#x7684;&#x57FA;&#x672C;&#x903B;&#x8F91;&#x3002;&#x6700;&#x597D;&#x6CE8;&#x660E;&#x7A0B;&#x5E8F;&#x7684;&#x6784;&#x5EFA;&#x548C;&#x4FEE;&#x6539;&#x65E5;&#x671F;&#xFF0C;&#x4EE5;&#x53CA;&#x4FEE;&#x6539;&#x7684;&#x539F;&#x56E0;&#x4E5F;&#x662F;&#x975E;&#x5E38;&#x6709;&#x5FC5;&#x8981;&#x7684;&#x3002; &#x7EF4;&#x62A4;&#x7A0B;&#x5E8F;&#x7684;&#x5404;&#x4E2A;&#x7248;&#x672C;&#x540C;&#x6837;&#x91CD;&#x8981;&#x3002;&#x5F53;&#x524D;&#x6709;&#x4E9B;&#x7F16;&#x7A0B;&#x5DE5;&#x5177;&#x90FD;&#x81EA;&#x5E26;&#x4E00;&#x4E2A;&#x7248;&#x672C;&#x7BA1;&#x7406;&#x5DE5;&#x5177;&#x3002;&#x65E0;&#x8BBA;&#x4F60;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x6539;&#x53D8;&#x81EA;&#x5DF1;&#x7684;&#x7A0B;&#x5E8F;&#xFF0C;&#x5B83;&#x4EEC;&#x90FD;&#x4F1A;&#x5C06;&#x5176;&#x4FDD;&#x5B58;&#x4E3A;.bak&#x6587;&#x4EF6;&#x3002; &#x6211;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x4E3A;&#x6BCF;&#x4E2A;&#x7A0B;&#x5E8F;&#x7EF4;&#x62A4;&#x4E09;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x7248;&#x672C;&#x3002;&#x6BD4;&#x5982;&#x8BF4;&#xFF0C;&#x6211;&#x6709;&#x4E00;&#x4E2A;&#x540D;&#x4E3A;program.c&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x540C;&#x65F6;&#x4E5F;&#x88AB;&#x5176;&#x4ED6;&#x9879;&#x76EE;&#x7EC4;&#x6210;&#x5458;&#x4F7F;&#x7528;&#x3002;&#x6211;&#x628A;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x590D;&#x5236;&#x4E3A; program.c.old&#x4F5C;&#x4E3A;&#x5907;&#x4EFD;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x4E14;&#x5F53;&#x6211;&#x4FEE;&#x6539;&#x65F6;&#xFF0C;&#x6211;&#x4F1A;&#x5907;&#x4EFD;&#x53E6;&#x4E00;&#x4E2A;&#x540D;&#x4E3A;program.c.wrk&#x7684;&#x526F;&#x672C;&#x6587;&#x4EF6;&#x3002;&#x5F53;&#x6210;&#x529F;&#x5B8C;&#x6210;&#x4FEE;&#x6539;&#x65F6;&#x66FF;&#x6362; program.c.wrk&#x6587;&#x4EF6;&#x3002; &#x4F60;&#x8FD8;&#x53EF;&#x4EE5;&#x7ED9;&#x81EA;&#x5DF1;&#x7684;&#x7A0B;&#x5E8F;&#x7248;&#x672C;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x65E5;&#x671F;&#x6216;&#x4E00;&#x4E9B;&#x6CE8;&#x91CA;&#xFF0C;&#x50CF;program260505.c&#x6216;programReadFnWrking.c&#x3002; &#x5982;&#x679C;&#x5DE5;&#x7A0B;&#x5305;&#x542B;&#x591A;&#x4E2A;&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x5219;&#x58F0;&#x79F0;&#x4E00;&#x4E2A;README&#x6587;&#x4EF6;&#xFF0C;&#x6CE8;&#x660E;&#x6BCF;&#x4E2A;&#x6E90;&#x6587;&#x4EF6;&#x3001;&#x6570;&#x636E;&#x6587;&#x4EF6;&#x3001;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#x4EE5;&#x53CA;&#x65E5;&#x5FD7;&#x6587;&#x4EF6;(&#x5982;&#x679C;&#x6709;&#x7684;&#x8BDD;)&#x7684;&#x4F5C;&#x7528;&#x3002;&#x4F60;&#x8FD8;&#x53EF;&#x4EE5;&#x6CE8;&#x660E;&#x7F16;&#x8BD1;&#x548C;&#x8FD0;&#x884C;&#x6B65;&#x9AA4;&#x3002; &#x6709;&#x65F6;&#x5019;&#xFF0C;&#x4F60;&#x4E00;&#x5B9A;&#x60F3;&#x77E5;&#x9053;&#x4E3A;&#x4EC0;&#x4E48;IF&#x8BED;&#x53E5;&#x6CA1;&#x6709;&#x5F97;&#x5230;&#x9884;&#x60F3;&#x7684;&#x7ED3;&#x679C;&#x3002;&#x53EF;&#x80FD;&#x4F60;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x7B49;&#x53F7;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x201C;=&#x201D;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x6761;&#x4EF6;&#x5224;&#x5B9A;&#x7B26;&#x53F7;&#x201C;==&#x201D;&#x3002;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x529E;&#x6CD5;&#x662F;&#x7528;&#x76F8;&#x53CD;&#x7684;&#x987A;&#x5E8F;&#x5199;&#x6761;&#x4EF6;&#x8BED;&#x53E5;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4F60;&#x7684;&#x6761;&#x4EF6;&#x8BED;&#x53E5;&#x5E94;&#x8BE5;&#x5982;&#x4E0B;&#xFF1A;if(10==i)&#x2026;&#x56E0;&#x6B64;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x9519;&#x8BEF;&#x5730;&#x5199;&#x6210;&#x4E86;&#x5355;&#x4E2A;&#x7B49;&#x4E8E;&#x53F7;&#xFF0C;&#x5728;&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#x4E5F;&#x80FD;&#x68C0;&#x67E5;&#x51FA;&#x6765;&#x5E76;&#x62A5;&#x9519;&#x3002; &#x4F7F;&#x7528;&#x5FAA;&#x73AF;&#x548C;&#x6761;&#x4EF6;&#x8BED;&#x53E5;&#x65F6;&#xFF0C;&#x5148;&#x628A;&#x5DE6;&#x53F3;&#x62EC;&#x53F7;&#x5BF9;&#x5E94;&#x8D77;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5728;&#x91CC;&#x9762;&#x5199;&#x5176;&#x4ED6;&#x8BED;&#x53E5;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#xFF1A;for(int i=0;i&lt;10;i++){printf(&#x201C;i=%dn&#x201D;,i);} &#x6CE8;&#xFF1A;&#x6BCF;&#x4E00;&#x884C;&#x5F00;&#x5934;&#x7684;&#x6570;&#x5B57;&#x8868;&#x660E;&#x5199;&#x5FAA;&#x73AF;&#x4EE3;&#x7801;&#x7684;&#x987A;&#x5E8F;&#x3002; &#x907F;&#x514D;&#x4F7F;&#x7528;&#x5E7B;&#x6570;(magic numbers)&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x4E0D;&#x8981;&#x5199;1circleArea = 3.14 * pow(radius,2); &#x800C;&#x8981;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A; 123#define PI 3.14circleArea = PI * pow(radius,2); &#x4F7F;&#x7528;&#x6709;&#x610F;&#x4E49;&#x7684;&#x53D8;&#x91CF;&#x548C;&#x51FD;&#x6570;&#x540D;&#x79F0;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x4F7F;&#x7528;&#x2018;radius&#x2019;&#x6765;&#x4EE3;&#x66FF;&#x5706;&#x7684;&#x534A;&#x5F84;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7528;&#x2018;r&#x2019;&#x6765;&#x8868;&#x793A;&#x3002;&#x540C;&#x6837;&#xFF0C;&#x51FD;&#x6570;&#x540D;&#x2018;calculateArea&#x2019;&#x8981;&#x6BD4;&#x5176;&#x4ED6;&#x4EFB; &#x4F55;&#x9690;&#x6666;&#x7684;&#x7F29;&#x5199;&#x8981;&#x597D;&#x5F97;&#x591A;&#x3002;&#x5306;&#x5FD9;&#x4E4B;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x8BB8;&#x4F1A;&#x4F7F;&#x7528;&#x7F29;&#x5199;&#x7684;&#x53D8;&#x91CF;&#x540D;&#xFF0C;&#x4F46;&#x4E00;&#x5F00;&#x59CB;&#x8282;&#x7701;&#x65F6;&#x95F4;&#x7684;&#x8BDD;&#xFF0C;&#x4E4B;&#x540E;&#x4F1A;&#x6D6A;&#x8D39;&#x66F4;&#x591A;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x53BB;&#x731C;&#x6D4B;&#x7F29;&#x5199;&#x53D8;&#x91CF;&#x540D;&#x4EE3;&#x8868;&#x4EC0;&#x4E48;&#x3002;(&#x7F16;&#x6CE8;&#xFF1A;) &#x4E3A;&#x540E;&#x9762;&#x7684;&#x8C03;&#x8BD5;&#x4F7F;&#x7528;&#x6253;&#x5370;&#x8BED;&#x53E5;&#xFF0C;&#x8FD9;&#x662F;&#x4E2A;&#x597D;&#x4E60;&#x60EF;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x5F53;&#x5B8C;&#x6210;&#x6700;&#x540E;&#x4EE3;&#x7801;&#x540E;&#xFF0C;&#x53BB;&#x6389;&#x8FD9;&#x4E9B;&#x8BED;&#x53E5;&#xFF0C;&#x6709;&#x65F6;&#x4E5F;&#x662F;&#x4E00;&#x9879;&#x5371;&#x9669;&#x7684;&#x4EFB;&#x52A1;&#x3002;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x7528;&#x4E8E;&#x8F93;&#x51FA;&#x8C03;&#x8BD5;&#x4FE1;&#x606F;&#x3002;&#x5F53;&#x6700;&#x7EC8;&#x7248;&#x672C;&#x751F;&#x6210;&#x65F6;&#xFF0C;&#x53EA;&#x8981;&#x628A;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x6CE8;&#x91CA;&#x6389;&#x5C31;&#x884C;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x53EA;&#x5728;&#x4E00;&#x4E2A;&#x5730;&#x65B9;&#x505A;&#x4FEE;&#x6539;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002; &#x4EE3;&#x7801;&#x7F16;&#x5199;&#x5B8C;&#x4E4B;&#x540E;&#xFF0C;&#x5F00;&#x59CB;&#x4F18;&#x5316;&#x4EE3;&#x7801;&#x3002;&#x4E4B;&#x524D;&#x58F0;&#x660E;&#x7684;&#x4E00;&#x4E9B;&#x53D8;&#x91CF;&#xFF0C;&#x73B0;&#x5728;&#x53EF;&#x80FD;&#x6CA1;&#x7528;&#x4E86;&#x3002;&#x540C;&#x6837;&#xFF0C;&#x5E76;&#x4E0D;&#x4F9D;&#x8D56;&#x5FAA;&#x73AF;&#x7684;&#x4E00;&#x4E9B;&#x58F0;&#x660E;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5FAA;&#x73AF;&#x6A21;&#x5757;&#x4E4B;&#x5916;&#x53BB;&#x3002;&#x624E;&#x5B9E;&#x7684;&#x7F16;&#x8BD1;&#x77E5;&#x8BC6;&#x540C;&#x6837;&#x4F1A;&#x5BF9;&#x4EE5;&#x540E;&#x7684;&#x4EE3;&#x7801;&#x4F18;&#x5316;&#x6709;&#x6240;&#x5E2E;&#x52A9;&#x3002; &#x5BF9;&#x81EA;&#x5DF1;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x548C;&#x786C;&#x4EF6;&#x8981;&#x6709;&#x8DB3;&#x591F;&#x7684;&#x4E86;&#x89E3;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4ECE;&#x8D44;&#x6E90;&#x5360;&#x7528;&#x7B49;&#x65B9;&#x9762;&#x63D0;&#x5347;&#x7A0B;&#x5E8F;&#x7684;&#x6027;&#x80FD;&#x3002; &#x7F16;&#x5199;&#x4EE3;&#x7801;&#x65F6;&#x8981;&#x5408;&#x7406;&#x4F7F;&#x7528;&#x7F29;&#x8FDB;&#xFF0C;&#x4EE5;&#x4F7F;&#x4EE3;&#x7801;&#x6E05;&#x6670;&#x53EF;&#x8BFB;&#x3002; &#x628A;&#x9879;&#x76EE;&#x6587;&#x4EF6;&#x653E;&#x5230;SOURCE&#x3001;HEADERS&#x3001;MAKE&#x3001;EXES&#x7B49;&#x4E0D;&#x540C;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x3002; &#x7814;&#x7A76;&#x522B;&#x4EBA;&#x7F16;&#x5199;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x8FD9;&#x53EF;&#x4EE5;&#x8BA9;&#x4F60;&#x5B66;&#x4E60;&#x5230;&#x65B0;&#x7684;&#x7F16;&#x7A0B;&#x6280;&#x672F;&#xFF0C;&#x4EE5;&#x53CA;&#x4ED6;&#x4EEC;&#x89E3;&#x51B3;&#x548C;&#x4F60;&#x76F8;&#x540C;&#x7684;&#x4EFB;&#x52A1;&#x65F6;&#x6240;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x6700;&#x540E;&#x4E00;&#x6761;(&#x4F46;&#x4E0D;&#x662F;&#x6700;&#x4E0D;&#x91CD;&#x8981;&#x7684;&#x4E00;&#x6761;)&#xFF0C;&#x5907;&#x4EFD;&#x6E90;&#x4EE3;&#x7801;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x6837;&#x5F53;&#x786C;&#x76D8;&#x51FA;&#x9519;&#x6216;&#x76F8;&#x540C;&#x7684;&#x95EE;&#x9898;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x4E0D;&#x81F3;&#x4E8E;&#x524D;&#x529F;&#x5C3D;&#x5F03;&#x3002; &#x9644;&#x52A0;&#xFF1A;&#x8865;&#x5145;&#x4E00;&#x6761;&#xFF0C;&#x575A;&#x6301;&#x4F7F;&#x7528;&#x4E00;&#x79CD;&#x547D;&#x540D;&#x6A21;&#x5F0F;&#x3002;&#x5982;&#x679C;&#x4F60;&#x6253;&#x7B97;&#x7528;&#x5308;&#x7259;&#x5229;&#x547D;&#x540D;&#x6CD5;&#xFF0C;&#x90A3;&#x5C31;&#x575A;&#x6301;&#x5E76;&#x5E7F;&#x6CDB;&#x4F7F;&#x7528;&#xFF0C;&#x5426;&#x5219;&#x5C06;&#x9002;&#x5F97;&#x5176;&#x53CD;&#x3002;","raw":null,"content":null,"categories":[{"name":"文章摘录","slug":"文章摘录","permalink":"https://zealoussnow.github.io/categories/文章摘录/"}],"tags":[{"name":"编程经验","slug":"编程经验","permalink":"https://zealoussnow.github.io/tags/编程经验/"}]},{"title":"Python高级编程(六)","slug":"advanced-python-06","date":"2016-04-29T08:48:52.000Z","updated":"2016-04-29T08:51:13.525Z","comments":true,"path":"2016/04/29/advanced-python-06/","link":"","permalink":"https://zealoussnow.github.io/2016/04/29/advanced-python-06/","excerpt":"&#x4F7F;&#x7528;zc.buildoutzc.buildout&#x539F;&#x7406;virtualenv&#x5BF9;&#x4E8E;&#x9694;&#x79BB;&#x4E00;&#x4E2A;python&#x73AF;&#x5883;&#x76F8;&#x5F53;&#x65B9;&#x4FBF;&#x3002;zc.buildout&#x63D0;&#x4F9B;&#x4E86;&#x76F8;&#x540C;&#x7684;&#x9694;&#x79BB;&#x529F;&#x80FD;&#xFF0C;&#x5E76;&#x4E14;&#x8FDB;&#x4E00;&#x6B65;&#x63D0;&#x4F9B;&#x4E86;&#xFF1A; &#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x3001;&#x5728;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x5B9A;&#x4E49;&#x8FD9;&#x4E9B;&#x4F9D;&#x8D56;&#x6027;&#x7684;&#x63CF;&#x8FF0;&#x6027;&#x8BED;&#x8A00; &#x63D0;&#x4F9B;&#x94FE;&#x63A5;&#x4EE3;&#x7801;&#x8C03;&#x7528;&#x7EC4;&#x5408;&#x7684;&#x8F93;&#x5165;&#x70B9;&#x7684;&#x63D2;&#x4EF6;&#x7CFB;&#x7EDF; &#x4E00;&#x79CD;&#x90E8;&#x7F72;&#x548C;&#x53D1;&#x884C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6E90;&#x4EE3;&#x7801;&#x53CA;&#x5176;&#x6267;&#x884C;&#x73AF;&#x5883;&#x7684;&#x65B9;&#x6CD5;","keywords":null,"text":"&#x4F7F;&#x7528;zc.buildoutzc.buildout&#x539F;&#x7406;virtualenv&#x5BF9;&#x4E8E;&#x9694;&#x79BB;&#x4E00;&#x4E2A;python&#x73AF;&#x5883;&#x76F8;&#x5F53;&#x65B9;&#x4FBF;&#x3002;zc.buildout&#x63D0;&#x4F9B;&#x4E86;&#x76F8;&#x540C;&#x7684;&#x9694;&#x79BB;&#x529F;&#x80FD;&#xFF0C;&#x5E76;&#x4E14;&#x8FDB;&#x4E00;&#x6B65;&#x63D0;&#x4F9B;&#x4E86;&#xFF1A; &#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x3001;&#x5728;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x5B9A;&#x4E49;&#x8FD9;&#x4E9B;&#x4F9D;&#x8D56;&#x6027;&#x7684;&#x63CF;&#x8FF0;&#x6027;&#x8BED;&#x8A00; &#x63D0;&#x4F9B;&#x94FE;&#x63A5;&#x4EE3;&#x7801;&#x8C03;&#x7528;&#x7EC4;&#x5408;&#x7684;&#x8F93;&#x5165;&#x70B9;&#x7684;&#x63D2;&#x4EF6;&#x7CFB;&#x7EDF; &#x4E00;&#x79CD;&#x90E8;&#x7F72;&#x548C;&#x53D1;&#x884C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6E90;&#x4EE3;&#x7801;&#x53CA;&#x5176;&#x6267;&#x884C;&#x73AF;&#x5883;&#x7684;&#x65B9;&#x6CD5; &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5C06;&#x63CF;&#x8FF0;&#x73AF;&#x5883;&#x4E2D;&#x6240;&#x9700;&#x7684;egg&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x72B6;&#x6001;&#x4EE5;&#x53CA;&#x6784;&#x5EFA;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6240;&#x9700;&#x8981;&#x7684;&#x6240;&#x6709;&#x5176;&#x4ED6;&#x5143;&#x7D20; &#x63D2;&#x4EF6;&#x7CFB;&#x7EDF;&#x5C06;&#x6CE8;&#x518C;&#x8FD9;&#x4E9B;&#x5305;&#x5E76;&#x6309;&#x7167;&#x6267;&#x884C;&#x7684;&#x987A;&#x5E8F;&#x5C06;&#x5B83;&#x4EEC;&#x94FE;&#x63A5;&#x8D77;&#x6765; &#x6700;&#x540E;&#xFF0C;&#x6574;&#x4E2A;&#x73AF;&#x5883;&#x662F;&#x72EC;&#x7ACB;&#x548C;&#x9694;&#x79BB;&#x7684;&#xFF0C;&#x56E0;&#x800C;&#x53EF;&#x4EE5;&#x50CF;&#x53D1;&#x884C;&#x548C;&#x90E8;&#x7F72;&#x540E;&#x90A3;&#x6837;&#x4F7F;&#x7528; &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7ED3;&#x6784;zc.buildout&#x4F9D;&#x8D56;&#x4E8E;&#x4E00;&#x4E2A;&#x7ED3;&#x6784;&#x4E0E;ConfigParser&#x6A21;&#x5757;&#x517C;&#x5BB9;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;ini&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002; &#x6700;&#x5C0F;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x6700;&#x5C0F;&#x7684;buildout&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x540D;&#x4E3A;[buildout]&#x7684;&#x5C0F;&#x8282;&#xFF0C;&#x5176;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x79F0;&#x4F5C;parts&#x7684;&#x53D8;&#x91CF;&#x3002;&#x8FD9;&#x4E2A;&#x53D8;&#x91CF;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x63D0;&#x4F9B;&#x5C0F;&#x8282;&#x5217;&#x8868;&#x7684;&#x591A;&#x884C;&#x503C;&#xFF0C;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; 12345678[buildout]parts= part1 part2[part1]recipe = my.recipe1[part2]recipe = my.recipe2 &#x5728;parts&#x4E2D;&#x6307;&#x5B9A;&#x7684;&#x6BCF;&#x4E2A;&#x5C0F;&#x8282;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4E2A;&#x63D0;&#x4F9B;&#x5305;&#x540D;&#x79F0;&#x7684;recipe&#x503C;&#x3002;&#x8FD9;&#x4E2A;&#x5305;&#x53EF;&#x4EE5;&#x662F;&#x4EFB;&#x4F55;python&#x5305;&#xFF0C;&#x53EA;&#x8981;&#x5B83;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;zc.buildout&#x5165;&#x53E3;&#x70B9;&#x3002; &#x7528;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;buildout&#x5C06;&#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x5DE5;&#x4F5C;&#x5E8F;&#x5217;&#xFF1A; &#x68C0;&#x67E5;my.recipe1&#x5305;&#x662F;&#x5426;&#x5B89;&#x88C5;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5B89;&#x88C5;&#xFF0C;&#x8BFB;&#x53D6;&#x5E76;&#x5B8C;&#x6210;&#x672C;&#x5730;&#x5B89;&#x88C5; &#x6267;&#x884C;my.recipe1&#x5165;&#x53E3;&#x70B9;&#x6240;&#x6307;&#x5411;&#x7684;&#x4EE3;&#x7801; &#x7136;&#x540E;&#xFF0C;&#x5BF9;parts&#x505A;&#x540C;&#x6837;&#x7684;&#x4E8B;&#x60C5; &#x56E0;&#x800C;&#xFF0C;buildout&#x662F;&#x4E00;&#x4E2A;&#x57FA;&#x4E8E;&#x63D2;&#x4EF6;&#x7684;&#x811A;&#x672C;&#xFF0C;&#x5C06;&#x88AB;&#x79F0;&#x4E3A;recipe&#x7684;&#x72EC;&#x7ACB;&#x5305;&#x7684;&#x6267;&#x884C;&#x94FE;&#x63A5;&#x8D77;&#x6765;&#x3002;&#x7528;&#x8FD9;&#x4E2A;&#x5DE5;&#x5177;&#x6784;&#x5EFA;&#x7684;&#x73AF;&#x5883;&#x5305;&#x62EC;recipe&#x6B63;&#x786E;&#x987A;&#x5E8F;&#x7684;&#x5B9A;&#x4E49;&#x3002; &#x53D1;&#x884C;&#x4E0E;&#x5206;&#x53D1;&#x5C0F;&#x7ED3;","raw":null,"content":null,"categories":[{"name":"Python","slug":"Python","permalink":"https://zealoussnow.github.io/categories/Python/"}],"tags":[{"name":"Python高级编程","slug":"Python高级编程","permalink":"https://zealoussnow.github.io/tags/Python高级编程/"}]},{"title":"Python高级编程(五)","slug":"advanced-python-05","date":"2016-04-29T07:58:09.000Z","updated":"2016-04-29T07:59:49.983Z","comments":true,"path":"2016/04/29/advanced-python-05/","link":"","permalink":"https://zealoussnow.github.io/2016/04/29/advanced-python-05/","excerpt":"","keywords":null,"text":"&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;Atomisator&#x6982;&#x8FF0;&#x6574;&#x4F53;&#x63CF;&#x8FF0;&#x5DE5;&#x4F5C;&#x73AF;&#x5883;&#x7F16;&#x5199;&#x5404;&#x4E2A;&#x5305;&#x5206;&#x53D1;Atomisator&#x5305;&#x4E4B;&#x95F4;&#x7684;&#x4F9D;&#x8D56;&#x6027;&#x5C0F;&#x7ED3;","raw":null,"content":null,"categories":[{"name":"Python","slug":"Python","permalink":"https://zealoussnow.github.io/categories/Python/"}],"tags":[{"name":"Python高级编程","slug":"Python高级编程","permalink":"https://zealoussnow.github.io/tags/Python高级编程/"}]},{"title":"Python高级编程(四)","slug":"advanced-python-04","date":"2016-04-28T09:36:42.000Z","updated":"2016-04-29T06:27:44.518Z","comments":true,"path":"2016/04/28/advanced-python-04/","link":"","permalink":"https://zealoussnow.github.io/2016/04/28/advanced-python-04/","excerpt":"&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x5305;&#x7528;&#x4E8E;&#x6240;&#x6709;&#x5305;&#x7684;&#x516C;&#x5171;&#x6A21;&#x5757;setup.py&#x6A21;&#x677F;&#xFF1A; 12from setuptools import setupsetup(name=&apos;tools.name&apos;)","keywords":null,"text":"&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x5305;&#x7528;&#x4E8E;&#x6240;&#x6709;&#x5305;&#x7684;&#x516C;&#x5171;&#x6A21;&#x5757;setup.py&#x6A21;&#x677F;&#xFF1A; 12from setuptools import setupsetup(name=&apos;tools.name&apos;) name&#x7ED9;&#x51FA;&#x4E86;egg&#x7684;&#x5168;&#x540D;&#xFF0C;&#x7531;&#x6B64;&#xFF0C;&#x8BE5;&#x811A;&#x672C;&#x63D0;&#x4F9B;&#x591A;&#x4E2A;&#x547D;&#x4EE4;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x2013;help-commands&#x9009;&#x9879;&#x5217;&#x51FA;&#x8FD9;&#x4E9B;&#x547D;&#x4EE4;&#x3002; Standard command&#x662F;distutils&#x63D0;&#x4F9B;&#x7684;&#x5185;&#x5EFA;&#x547D;&#x4EE4;&#xFF0C;&#x800C;Extra commands&#x662F;&#x7531;&#x8BF8;&#x5982;setuptools&#x8FD9;&#x6837;&#x7684;&#x7B2C;&#x4E09;&#x65B9;&#x5305;&#x6216;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x5B9A;&#x4E49;&#x548C;&#x6CE8;&#x518C;&#x65B0;&#x547D;&#x4EE4;&#x7684;&#x5305;&#x6240;&#x521B;&#x5EFA;&#x7684;&#x3002; sdistsdist&#x547D;&#x4EE4;&#x662F;&#x6700;&#x7B80;&#x5355;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x5B83;&#x7528;&#x6765;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x53D1;&#x884C;&#x6811;&#xFF0C;&#x8FD0;&#x884C;&#x4E00;&#x4E2A;&#x5305;&#x6240;&#x9700;&#x7684;&#x4E00;&#x5207;&#x5185;&#x5BB9;&#x90FD;&#x5C06;&#x590D;&#x5236;&#x5230;&#x8FD9;&#x91CC;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x8FD9;&#x68F5;&#x6811;&#x88AB;&#x5F52;&#x6863;&#x5230;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x6863;&#x6848;&#x6587;&#x4EF6;&#x4E2D;&#x3002;&#x8FD9;&#x4E2A;&#x6863;&#x6848;&#x57FA;&#x672C;&#x4E0A;&#x662F;&#x4E00;&#x4E2A;&#x6E90;&#x6811;&#x7684;&#x526F;&#x672C;&#x3002; &#x8FD9;&#x4E2A;&#x547D;&#x4EE4;&#x662F;&#x4ECE;&#x76EE;&#x6807;&#x7CFB;&#x7EDF;&#x72EC;&#x7ACB;&#x5730;&#x5206;&#x53D1;&#x4E00;&#x4E2A;&#x5305;&#x7684;&#x6700;&#x7B80;&#x5355;&#x65B9;&#x5F0F;&#x3002;&#x5B83;&#x5C06;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;dist&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x5176;&#x4E2D;&#x5305;&#x542B;&#x53EF;&#x88AB;&#x5206;&#x53D1;&#x7684;&#x6863;&#x6848;&#x3002;&#x4F7F;&#x7528;&#x5B83;&#x4E4B;&#x524D;&#xFF0C;&#x5FC5;&#x987B;&#x4F20;&#x9012;&#x4E00;&#x4E2A;&#x9644;&#x52A0;&#x7684;&#x53C2;&#x6570;&#x7ED9;setup&#xFF0C;&#x4EE5;&#x63D0;&#x4F9B;&#x7248;&#x672C;&#x53F7;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x7ED9;&#x5B83;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;version&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x5C06;&#x4F7F;&#x7528;version=0.0.0&#x3002; 12from setuptools import setupsetup(name=&apos;tools.name&apos;, version=&apos;0.1.1&apos;) &#x8FD9;&#x4E2A;&#x7248;&#x672C;&#x53F7;&#x5728;&#x5347;&#x7EA7;&#x65F6;&#x5341;&#x5206;&#x6709;&#x7528;&#xFF0C;&#x6BCF;&#x5F53;&#x53D1;&#x884C;&#x5305;&#x65F6;&#x90FD;&#x5C06;&#x63D0;&#x5347;&#x7248;&#x672C;&#x53F7;&#xFF0C;&#x8FD9;&#x6837;&#x76EE;&#x6807;&#x7CFB;&#x7EDF;&#x5C31;&#x77E5;&#x9053;&#x5B83;&#x5DF2;&#x7ECF;&#x88AB;&#x4FEE;&#x6539;&#x4E86;&#x3002; &#x5728;sdist&#x5206;&#x53D1;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x5305;&#x542B;&#x6709;C&#x7A0B;&#x5E8F;&#x5E93;&#x6216;&#x6269;&#x5C55;&#xFF0C;&#x76EE;&#x6807;&#x7CFB;&#x7EDF;&#x5C06;&#x8D1F;&#x8D23;&#x7F16;&#x8BD1;&#x5B83;&#x4EEC;&#xFF0C;&#x8FD9;&#x5728;&#x57FA;&#x4E8E;Linux&#x548C;Mac OS&#x7684;&#x7CFB;&#x7EDF;&#x4E0A;&#x662F;&#x5F88;&#x5E38;&#x89C1;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x4ED6;&#x4EEC;&#x90FD;&#x63D0;&#x4F9B;&#x7F16;&#x8BD1;&#x5668;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x5728;windows&#x4E0B;&#x5E76;&#x4E0D;&#x5E38;&#x89C1;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x5F53;&#x4E00;&#x4E2A;&#x5305;&#x6253;&#x7B97;&#x5728;&#x591A;&#x4E2A;&#x5E73;&#x53F0;&#x4E0B;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x5E94;&#x8BE5;&#x603B;&#x662F;&#x548C;&#x4E00;&#x4E2A;&#x9884;&#x7F16;&#x8BD1;&#x5206;&#x53D1;&#x7248;&#x672C;&#x4E00;&#x8D77;&#x5206;&#x53D1;&#x7684;&#x539F;&#x56E0;&#x3002; MANIFEST.in&#x6587;&#x4EF6;&#x57FA;&#x4E8E;&#x6A21;&#x677F;&#x7684;&#x65B9;&#x6CD5;&#x521B;&#x5EFA;&#x5305;&#x6A21;&#x677F;&#x5F00;&#x53D1;&#x5468;&#x671F;&#x5C0F;&#x7ED3;","raw":null,"content":null,"categories":[{"name":"Python","slug":"Python","permalink":"https://zealoussnow.github.io/categories/Python/"}],"tags":[{"name":"Python高级编程","slug":"Python高级编程","permalink":"https://zealoussnow.github.io/tags/Python高级编程/"}]},{"title":"Python高级编程(三)","slug":"advanced-python-03","date":"2016-04-28T09:33:54.000Z","updated":"2016-04-29T06:27:38.973Z","comments":true,"path":"2016/04/28/advanced-python-03/","link":"","permalink":"https://zealoussnow.github.io/2016/04/28/advanced-python-03/","excerpt":"&#x9009;&#x62E9;&#x597D;&#x7684;&#x540D;&#x79F0;PEP8&#x548C;&#x547D;&#x540D;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x547D;&#x540D;&#x98CE;&#x683C;","keywords":null,"text":"&#x9009;&#x62E9;&#x597D;&#x7684;&#x540D;&#x79F0;PEP8&#x548C;&#x547D;&#x540D;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x547D;&#x540D;&#x98CE;&#x683C; &#x547D;&#x540D;&#x6307;&#x5357;&#x53C2;&#x6570;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x7C7B;&#x540D;&#x6A21;&#x5757;&#x548C;&#x5305;&#x540D;&#x79F0;&#x4F7F;&#x7528;API&#x6709;&#x7528;&#x7684;&#x5DE5;&#x5177;&#x5C0F;&#x7ED3;","raw":null,"content":null,"categories":[{"name":"Python","slug":"Python","permalink":"https://zealoussnow.github.io/categories/Python/"}],"tags":[{"name":"Python高级编程","slug":"Python高级编程","permalink":"https://zealoussnow.github.io/tags/Python高级编程/"}]},{"title":"Python高级编程(二)","slug":"advanced-python-02","date":"2016-04-28T09:20:49.000Z","updated":"2016-04-29T06:27:18.135Z","comments":true,"path":"2016/04/28/advanced-python-02/","link":"","permalink":"https://zealoussnow.github.io/2016/04/28/advanced-python-02/","excerpt":"&#x8BED;&#x6CD5;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x2014;&#x2014;&#x7C7B;&#x7EA7;&#x5B50;&#x7C7B;&#x5316;&#x5185;&#x5EFA;&#x7C7B;&#x578B;&#x8BBF;&#x95EE;&#x8D85;&#x7C7B;&#x4E2D;&#x7684;&#x65B9;&#x6CD5;super&#x662F;&#x4E00;&#x4E2A;&#x5185;&#x5EFA;&#x7C7B;&#x578B;&#xFF0C;&#x7528;&#x6765;&#x8BBF;&#x95EE;&#x5C5E;&#x4E8E;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x8D85;&#x7C7B;&#x4E2D;&#x7684;&#x7279;&#x6027;(attribute)&#xFF0C;&#x867D;&#x7136;&#x5B83;&#x7684;&#x4F7F;&#x7528;&#x4E0E;&#x51FD;&#x6570;&#x7C7B;&#x4F3C;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x5B9E;&#x9645;&#x4E0A;&#x4ECD;&#x7136;&#x662F;&#x4E00;&#x4E2A;&#x5185;&#x5EFA;&#x7C7B;&#x578B;&#x3002;","keywords":null,"text":"&#x8BED;&#x6CD5;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x2014;&#x2014;&#x7C7B;&#x7EA7;&#x5B50;&#x7C7B;&#x5316;&#x5185;&#x5EFA;&#x7C7B;&#x578B;&#x8BBF;&#x95EE;&#x8D85;&#x7C7B;&#x4E2D;&#x7684;&#x65B9;&#x6CD5;super&#x662F;&#x4E00;&#x4E2A;&#x5185;&#x5EFA;&#x7C7B;&#x578B;&#xFF0C;&#x7528;&#x6765;&#x8BBF;&#x95EE;&#x5C5E;&#x4E8E;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x8D85;&#x7C7B;&#x4E2D;&#x7684;&#x7279;&#x6027;(attribute)&#xFF0C;&#x867D;&#x7136;&#x5B83;&#x7684;&#x4F7F;&#x7528;&#x4E0E;&#x51FD;&#x6570;&#x7C7B;&#x4F3C;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x5B9E;&#x9645;&#x4E0A;&#x4ECD;&#x7136;&#x662F;&#x4E00;&#x4E2A;&#x5185;&#x5EFA;&#x7C7B;&#x578B;&#x3002; &#x7406;&#x89E3;python&#x7684;&#x65B9;&#x6CD5;&#x89E3;&#x6790;&#x987A;&#x5E8F;L[MyClass(Base1, Base2)] = MyClass + merge(L[Base1], L[Base2], Base1, Base2) C&#x7684;&#x7EBF;&#x6027;&#x5316;&#x662F;C&#x52A0;&#x4E0A;&#x7236;&#x7C7B;&#x7684;&#x7EBF;&#x6027;&#x5316;&#x548C;&#x7236;&#x7C7B;&#x5217;&#x8868;&#x7684;&#x5408;&#x5E76;&#x7684;&#x603B;&#x548C;&#x3002;&#x7C7B;&#x7684;__mro__&#x7279;&#x6027;(&#x53EA;&#x8BFB;)&#x7528;&#x6765;&#x5B58;&#x50A8;&#x7EBF;&#x6027;&#x5316;&#x8BA1;&#x7B97;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x8BA1;&#x7B97;&#x5C06;&#x5728;&#x7C7B;&#x5B9A;&#x4E49;&#x8F7D;&#x5165;&#x65F6;&#x5B8C;&#x6210;&#x3002; super&#x7684;&#x7F3A;&#x9677;&#x5F53;&#x4F7F;&#x7528;&#x4E86;&#x591A;&#x91CD;&#x7EE7;&#x627F;&#x7684;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x65F6;&#xFF0C;&#x518D;&#x4F7F;&#x7528;&#x5B83;&#x662F;&#x76F8;&#x5F53;&#x5371;&#x9669;&#x7684;&#xFF0C;&#x8FD9;&#x4E3B;&#x8981;&#x662F;&#x56E0;&#x4E3A;&#x7C7B;&#x7684;&#x521D;&#x59CB;&#x5316;&#x3002;&#x5728;python&#x4E2D;&#xFF0C;&#x57FA;&#x7C7B;&#x4E0D;&#x4F1A;&#x5728;__init__&#x4E2D;&#x88AB;&#x9690;&#x5F0F;&#x5730;&#x8C03;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x4F9D;&#x9760;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x6765;&#x8C03;&#x7528;&#x5B83;&#x4EEC;&#x3002; &#x6DF7;&#x7528;super&#x548C;&#x4F20;&#x7EDF;&#x8C03;&#x7528; &#x4E0D;&#x540C;&#x79CD;&#x7C7B;&#x7684;&#x53C2;&#x6570; &#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x51FA;&#x73B0;&#x524D;&#x9762;&#x63D0;&#x5230;&#x7684;&#x6240;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x5728;Python&#x5728;&#x8FD9;&#x4E2A;&#x9886;&#x57DF;&#x4E0A;&#x53D6;&#x5F97;&#x8FDB;&#x5C55;&#x4E4B;&#x524D;&#xFF0C;&#x5FC5;&#x987B;&#x8003;&#x8651;&#x4E00;&#x4E0B;&#x51E0;&#x70B9;&#xFF1A; &#x5E94;&#x8BE5;&#x907F;&#x514D;&#x591A;&#x91CD;&#x7EE7;&#x627F; super&#x7684;&#x4F7F;&#x7528;&#x5FC5;&#x987B;&#x4E00;&#x81F4; &#x4E0D;&#x8981;&#x6DF7;&#x7528;&#x8001;&#x5F0F;&#x548C;&#x65B0;&#x5F0F;&#x7684;&#x7C7B; &#x8C03;&#x7528;&#x7236;&#x7C7B;&#x65F6;&#x5FC5;&#x987B;&#x68C0;&#x67E5;&#x7C7B;&#x5C42;&#x6B21; &#x63CF;&#x8FF0;&#x7B26;&#x548C;&#x5C5E;&#x6027;1234567class MyClass(object): __secret_value = 1def test_myclass(): instance_of = MyClass() # print instance_of.__secret_value print instance_of._MyClass__secret_value &#x63CF;&#x8FF0;&#x7B26;&#x63CF;&#x8FF0;&#x7B26;&#x7528;&#x6765;&#x81EA;&#x5B9A;&#x4E49;&#x5728;&#x5F15;&#x7528;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x4E0A;&#x7684;&#x7279;&#x6027;&#x65F6;&#x6240;&#x5E94;&#x8BE5;&#x5B8C;&#x6210;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x662F;python&#x4E2D;&#x590D;&#x6742;&#x7279;&#x6027;&#x7684;&#x57FA;&#x7840;&#xFF0C;&#x5B83;&#x4EEC;&#x5728;&#x5185;&#x90E8;&#x4F7F;&#x7528;&#xFF0C;&#x4EE5;&#x5B9E;&#x73B0;&#x5C5E;&#x6027;&#x3001;&#x7C7B;&#x3001;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#x548C;super&#x7C7B;&#x7B49;&#x3002;&#x5B83;&#x4EEC;&#x662F;&#x5B9A;&#x4E49;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x7279;&#x6027;&#x53EF;&#x80FD;&#x7684;&#x8BBF;&#x95EE;&#x65B9;&#x5F0F;&#x7684;&#x7C7B;&#xFF0C;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x4E00;&#x4E2A;&#x7C7B;&#x53EF;&#x4EE5;&#x59D4;&#x6258;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x6765;&#x7BA1;&#x7406;&#x5176;&#x7279;&#x6027;&#x3002; &#x63CF;&#x8FF0;&#x7B26;&#x7C7B;&#x57FA;&#x4E8E;&#x4E09;&#x4E2A;&#x5FC5;&#x987B;&#x5B9E;&#x73B0;&#x7684;&#x7279;&#x6B8A;&#x65B9;&#x6CD5;&#xFF1A; __set__ &#x5728;&#x4EFB;&#x4F55;&#x7279;&#x6027;&#x88AB;&#x8BBE;&#x7F6E;&#x7684;&#x65F6;&#x5019;&#x8C03;&#x7528;&#xFF0C;&#x79F0;&#x5176;&#x4E3A;setter __get__ &#x5728;&#x4EFB;&#x4F55;&#x7279;&#x6027;&#x88AB;&#x8BFB;&#x53D6;&#x7684;&#x65F6;&#x5019;&#x8C03;&#x7528;&#xFF0C;&#x79F0;&#x5176;&#x4E3A;getter __delete__ &#x5728;&#x7279;&#x6027;&#x4E0A;&#x8BF7;&#x6C42;del&#x65F6;&#x8C03;&#x7528; &#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x5C06;&#x5728;__dict__&#x7279;&#x6027;&#x4E4B;&#x524D;&#x88AB;&#x8C03;&#x7528; &#x5B9E;&#x73B0;&#x4E86;__get__&#x548C;__set__&#x7684;&#x63CF;&#x8FF0;&#x7B26;&#x88AB;&#x79F0;&#x4E3A;&#x6570;&#x636E;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x53EA;&#x5B9E;&#x73B0;__get__&#x7684;&#x63CF;&#x8FF0;&#x7B26;&#x88AB;&#x79F0;&#x4E3A;&#x975E;&#x6570;&#x636E;&#x63CF;&#x8FF0;&#x7B26; &#x5185;&#x7701;&#x63CF;&#x8FF0;&#x7B26;&#x8FD9;&#x79CD;&#x63CF;&#x8FF0;&#x7B26;&#x5C06;&#x68C0;&#x67E5;&#x5BBF;&#x4E3B;&#x7C7B;&#x7B7E;&#x540D;&#xFF0C;&#x4EE5;&#x8BA1;&#x7B97;&#x4E00;&#x4E9B;&#x4FE1;&#x606F; &#x5143;&#x63CF;&#x8FF0;&#x7B26;&#x8FD9;&#x79CD;&#x63CF;&#x8FF0;&#x7B26;&#x4F7F;&#x7528;&#x7C7B;&#x65B9;&#x6CD5;&#x672C;&#x8EAB;&#x6765;&#x5B8C;&#x6210;&#x503C;&#x8BA1;&#x7B97; &#x5C5E;&#x6027;&#x5C5E;&#x6027;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x5185;&#x5EFA;&#x7684;&#x63CF;&#x8FF0;&#x7B26;&#x7C7B;&#x578B;&#xFF0C;&#x5B83;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x5C06;&#x4E00;&#x4E2A;&#x7279;&#x6027;&#x94FE;&#x63A5;&#x5230;&#x4E00;&#x7EC4;&#x65B9;&#x6CD5;&#x4E0A;&#x3002;&#x5C5E;&#x6027;&#x91C7;&#x7528;fget&#x53C2;&#x6570;&#x548C;&#x4E09;&#x4E2A;&#x53EF;&#x9009;&#x7684;&#x53C2;&#x6570;&#x2014;&#x2014;fset&#xFF0C;fdel&#x548C;doc&#x3002;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x7528;&#x6765;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x94FE;&#x63A5;&#x5230;&#x7279;&#x6027;&#x7684;docstring&#xFF0C;&#x5C31;&#x50CF;&#x662F;&#x4E2A;&#x65B9;&#x6CD5;&#x4E00;&#x6837;&#x3002; &#x5C5E;&#x6027;&#x7B80;&#x5316;&#x4E86;&#x63CF;&#x8FF0;&#x7B26;&#x7684;&#x7F16;&#x5199;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x4F7F;&#x7528;&#x7C7B;&#x7684;&#x7EE7;&#x627F;&#x65F6;&#x5FC5;&#x987B;&#x5C0F;&#x5FC3;&#x5904;&#x7406;&#xFF0C;&#x6240;&#x521B;&#x5EFA;&#x7684;&#x7279;&#x6027;&#x4F7F;&#x7528;&#x5F53;&#x524D;&#x7C7B;&#x7684;&#x65B9;&#x6CD5;&#x521B;&#x5EFA;&#xFF0C;&#x800C;&#x4E0D;&#x5E94;&#x4F7F;&#x7528;&#x5728;&#x6D3E;&#x751F;&#x7C7B;&#x4E2D;&#x91CD;&#x8F7D;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x8FD9;&#x6709;&#x4E9B;&#x6DF7;&#x4E71;&#xFF0C;&#x56E0;&#x4E3A;&#x540E;&#x8005;&#x662F;&#x5927;&#x90E8;&#x5206;&#x5B9E;&#x73B0;&#x5C5E;&#x6027;&#x7684;&#x8BED;&#x8A00;&#x4E2D;&#x76F8;&#x5F53;&#x5408;&#x4E4E;&#x903B;&#x8F91;&#x7684;&#x884C;&#x4E3A;&#x3002; &#x69FD;python&#x5141;&#x8BB8;&#x4F7F;&#x7528;__slots__&#x7279;&#x6027;&#x4E3A;&#x6307;&#x5B9A;&#x7684;&#x7C7B;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x9759;&#x6001;&#x7279;&#x6027;&#x5217;&#x8868;&#xFF0C;&#x5E76;&#x4E14;&#x8DF3;&#x8FC7;&#x6BCF;&#x4E2A;&#x7C7B;&#x5B9E;&#x4F8B;&#x4E2D;__dict__&#x5217;&#x8868;&#x7684;&#x521B;&#x5EFA;&#x5DE5;&#x4F5C;&#x3002;&#x5B83;&#x4EEC;&#x7528;&#x6765;&#x4E3A;&#x7279;&#x6027;&#x5F88;&#x5C11;&#x7684;&#x7C7B;&#x8282;&#x7701;&#x5B58;&#x50A8;&#x7A7A;&#x95F4;&#xFF0C;&#x56E0;&#x4E3A;&#x5C06;&#x4E0D;&#x5728;&#x6BCF;&#x4E2A;&#x5B9E;&#x4F8B;&#x4E2D;&#x521B;&#x5EFA;__dict__&#x3002; &#x56E0;&#x4E3A;&#x4EFB;&#x4F55;&#x65B0;&#x7684;&#x7279;&#x6027;&#x90FD;&#x5C06;&#x5728;__dict__&#x4E2D;&#x88AB;&#x6DFB;&#x52A0;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x65E0;&#x6CD5;&#x5728;&#x6D3E;&#x751F;&#x7C7B;&#x4E0A;&#x5DE5;&#x4F5C;&#x3002; &#x5143;&#x7F16;&#x7A0B;&#x5143;&#x7F16;&#x7A0B;&#x662F;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x901A;&#x8FC7;&#x6DFB;&#x52A0;&#x65B0;&#x7684;&#x8BA1;&#x7B97;&#x529F;&#x80FD;&#xFF0C;&#x6216;&#x8005;&#x6539;&#x53D8;&#x5DF2;&#x6709;&#x529F;&#x80FD;&#x6765;&#x6539;&#x53D8;&#x7A0B;&#x5E8F;&#x884C;&#x4E3A;&#x7684;&#x4E00;&#x79CD;&#x6280;&#x5DE7;&#x3002; new-style&#x7C7B;&#x5E26;&#x6765;&#x4E86;&#x4E00;&#x79CD;&#x80FD;&#x529B;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E24;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x65B9;&#x6CD5;&#x2014;&#x2014;__new__&#x548C;__metaclass__&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x4FEE;&#x6539;&#x7C7B;&#x548C;&#x5BF9;&#x8C61;&#x7684;&#x5B9A;&#x4E49;&#x3002; __new__&#x65B9;&#x6CD5;&#x7279;&#x6B8A;&#x65B9;&#x6CD5;__new__&#x662F;&#x4E00;&#x4E2A;&#x5143;&#x6784;&#x9020;&#x7A0B;&#x5E8F;&#xFF0C;&#x6BCF;&#x5F53;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x5FC5;&#x987B;&#x88AB;factory&#x7C7B;&#x5B9E;&#x4F8B;&#x5316;&#x65F6;&#x5C31;&#x5C06;&#x8C03;&#x7528;&#x5B83;&#x3002; 123456789101112class Myclass(object): def __new__(cls): print &apos;__new__ called&apos; return object.__new__(cls) def __init__(self): print &apos;__init__ called&apos; self.a = 1&gt;&gt;&gt; instance = Myclass() __new__ called __init__ called __new__&#x65B9;&#x6CD5;&#x5FC5;&#x987B;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x56E0;&#x6B64;&#x5B83;&#x53EF;&#x4EE5;&#x5728;&#x5BF9;&#x8C61;&#x521B;&#x5EFA;&#x4E4B;&#x524D;&#x6216;&#x4E4B;&#x540E;&#x4FEE;&#x6539;&#x7C7B;&#x3002;&#x8FD9;&#x5BF9;&#x4E8E;&#x786E;&#x4FDD;&#x5BF9;&#x8C61;&#x6784;&#x9020;&#x7A0B;&#x5E8F;&#x4E0D;&#x4F1A;&#x88AB;&#x8BBE;&#x7F6E;&#x6210;&#x4E00;&#x4E2A;&#x4E0D;&#x5E0C;&#x671B;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x6216;&#x8005;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x4E0D;&#x80FD;&#x88AB;&#x6784;&#x9020;&#x7A0B;&#x5E8F;&#x5220;&#x9664;&#x7684;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x6709;&#x5E2E;&#x52A9;&#x7684;&#x3002; &#x4F8B;&#x5982;&#xFF1A;&#x56E0;&#x4E3A;__init__&#x5728;&#x5B50;&#x7C7B;&#x4E2D;&#x4E0D;&#x4F1A;&#x88AB;&#x9690;&#x5F0F;&#x8C03;&#x7528;&#xFF0C;&#x6240;&#x4EE5;__new__&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x786E;&#x5B9A;&#x5728;&#x6574;&#x4E2A;&#x7C7B;&#x5C42;&#x6B21;&#x4E2D;&#x5B8C;&#x6210;&#x521D;&#x59CB;&#x5316;&#x5DE5;&#x4F5C;&#x3002; __metaclass__&#x65B9;&#x6CD5;&#x5143;&#x7C7B;(MetaClass)&#x63D0;&#x4F9B;&#x4E86;&#x5728;&#x7C7B;&#x5BF9;&#x8C61;&#x901A;&#x8FC7;&#x5176;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;(Factory)&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x521B;&#x5EFA;&#x65F6;&#x8FDB;&#x884C;&#x4EA4;&#x4E92;&#x7684;&#x80FD;&#x529B;&#x3002;&#x5B83;&#x7684;&#x6548;&#x679C;&#x4E0E;__new__&#x7C7B;&#x4F3C;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x5728;&#x7C7B;&#x7EA7;&#x522B;&#x4E0A;&#x8FD0;&#x884C;&#x3002;","raw":null,"content":null,"categories":[{"name":"Python","slug":"Python","permalink":"https://zealoussnow.github.io/categories/Python/"}],"tags":[{"name":"Python高级编程","slug":"Python高级编程","permalink":"https://zealoussnow.github.io/tags/Python高级编程/"}]},{"title":"Python高级编程(一)","slug":"advanced-python-01","date":"2016-04-28T08:57:49.000Z","updated":"2016-04-29T08:10:59.596Z","comments":true,"path":"2016/04/28/advanced-python-01/","link":"","permalink":"https://zealoussnow.github.io/2016/04/28/advanced-python-01/","excerpt":"&#x8BED;&#x6CD5;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x2014;&#x2014;&#x4F4E;&#x4E8E;&#x7C7B;&#x7EA7;&#x5217;&#x8868;&#x63A8;&#x5BFC;(List Comprehensions)1[ i for i in range(10) if i % 2 == 0] &#x6BCF;&#x5F53;&#x8981;&#x5BF9;&#x5E8F;&#x5217;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x8FDB;&#x884C;&#x5FAA;&#x73AF;&#x5904;&#x7406;&#x65F6;&#xFF0C;&#x5C31;&#x5E94;&#x8BE5;&#x5C1D;&#x8BD5;&#x7528;List Comprehensions&#x6765;&#x4EE3;&#x66FF;&#x5B83;&#x3002;","keywords":null,"text":"&#x8BED;&#x6CD5;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x2014;&#x2014;&#x4F4E;&#x4E8E;&#x7C7B;&#x7EA7;&#x5217;&#x8868;&#x63A8;&#x5BFC;(List Comprehensions)1[ i for i in range(10) if i % 2 == 0] &#x6BCF;&#x5F53;&#x8981;&#x5BF9;&#x5E8F;&#x5217;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x8FDB;&#x884C;&#x5FAA;&#x73AF;&#x5904;&#x7406;&#x65F6;&#xFF0C;&#x5C31;&#x5E94;&#x8BE5;&#x5C1D;&#x8BD5;&#x7528;List Comprehensions&#x6765;&#x4EE3;&#x66FF;&#x5B83;&#x3002; &#x8FED;&#x4EE3;&#x5668;&#x548C;&#x751F;&#x6210;&#x5668;(Iterator &amp; Generator)&#x8FED;&#x4EE3;&#x5668;(Iterator)&#x8FED;&#x4EE3;&#x5668;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x4E00;&#x4E2A;&#x5B9E;&#x73B0;&#x8FED;&#x4EE3;&#x5668;&#x534F;&#x8BAE;&#x7684;&#x5BB9;&#x5668;&#x5BF9;&#x8C61;&#xFF0C;&#x5B83;&#x57FA;&#x4E8E;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#xFF1A; next &#x8FD4;&#x56DE;&#x5BB9;&#x5668;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x9879;&#x76EE; __iter__ &#x8FD4;&#x56DE;&#x8FED;&#x4EE3;&#x5668;&#x672C;&#x8EAB; &#x751F;&#x6210;&#x5668;(Generator)&#x751F;&#x6210;&#x5668;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x51FA;&#x8272;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x4F7F;&#x5F97;&#x9700;&#x8981;&#x8FD4;&#x56DE;&#x4E00;&#x7CFB;&#x5217;&#x5143;&#x7D20;&#x7684;&#x51FD;&#x6570;&#x6240;&#x9700;&#x7684;&#x4EE3;&#x7801;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#x3001;&#x9AD8;&#x6548;&#x3002;&#x57FA;&#x4E8E;yield&#x6307;&#x4EE4;&#xFF0C;&#x53EF;&#x4EE5;&#x6682;&#x505C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x5E76;&#x8FD4;&#x56DE;&#x4E2D;&#x95F4;&#x7ED3;&#x679C;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x5C06;&#x4FDD;&#x5B58;&#x6267;&#x884C;&#x73AF;&#x5883;&#x5E76;&#x4E14;&#x53EF;&#x4EE5;&#x5728;&#x5FC5;&#x8981;&#x65F6;&#x6062;&#x590D;&#x3002; &#x5982;&#xFF1A; 1234567def fib(): a, b = 0, 1 while True: yield b a, b = b, a + bf = fib[f.next() for i in range(10)] &#x8BE5;&#x51FD;&#x6570;&#x5C06;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x8FED;&#x4EE3;&#x5668;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;generator&#x5BF9;&#x8C61;&#xFF0C;&#x5B83;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x4FDD;&#x5B58;&#x6267;&#x884C;&#x73AF;&#x5883;&#x3002;&#x5BF9;&#x5B83;&#x7684;&#x8C03;&#x7528;&#x65F6;&#x4E0D;&#x786E;&#x5B9A;&#x7684;&#xFF0C;&#x6BCF;&#x6B21;&#x90FD;&#x5C06;&#x4EA7;&#x751F;&#x5E8F;&#x5217;&#x4E2D;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x3002;&#x8FD9;&#x79CD;&#x8BED;&#x6CD5;&#x5F88;&#x7B80;&#x6D01;&#xFF0C;&#x7B97;&#x6CD5;&#x7684;&#x4E0D;&#x786E;&#x5B9A;&#x7279;&#x6027;&#x5E76;&#x6CA1;&#x6709;&#x5F71;&#x54CD;&#x4EE3;&#x7801;&#x7684;&#x53EF;&#x8BFB;&#x6027;&#x3002;&#x4E0D;&#x5FC5;&#x63D0;&#x4F9B;&#x4F7F;&#x51FD;&#x6570;&#x53EF;&#x505C;&#x6B62;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x8FD9;&#x770B;&#x4E0A;&#x53BB;&#x50CF;&#x662F;&#x7528;&#x4F2A;&#x4EE3;&#x7801;&#x8BBE;&#x8BA1;&#x7684;&#x5E8F;&#x5217;&#x4E00;&#x6837;&#x3002; python&#x5F15;&#x5165;&#x7684;&#x4E0E;&#x751F;&#x6210;&#x5668;&#x76F8;&#x5173;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x7279;&#x6027;&#x662F;&#x63D0;&#x4F9B;&#x4E86;&#x4E0E;next&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x7684;&#x4EE3;&#x7801;&#x8FDB;&#x884C;&#x4EA4;&#x4E92;&#x7684;&#x529F;&#x80FD;&#x3002;yield&#x5C06;&#x53D8;&#x6210;&#x4E00;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x800C;&#x4E00;&#x4E2A;&#x503C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;send&#x51FD;&#x6570;&#x6765;&#x4F20;&#x9012;&#x3002; &#x5982;&#xFF1A; 1234567891011121314151617181920def psychologist(): print &apos;Please input OK&apos; while True: answer = (yield) if answer is not None: if answer.endswith(&apos;,&apos;): print &apos;The answer is not ok&apos; elif &apos;good&apos; in answer: print &quot;That&apos;s good, go on&quot; elif &apos;bad&apos; in answer: print &quot;Don&apos;t be so negative&quot;&gt;&gt;&gt; from demo import *Please input OK&gt;&gt;&gt; f.send(&apos;ok&apos;)&gt;&gt;&gt; f.send(&apos;good&apos;)That&apos;s good, go on&gt;&gt;&gt; f.send(&apos;bad&apos;)Don&apos;t be so negative&gt;&gt;&gt; f.send(&apos;bad,&apos;)The answer is not ok send&#x7684;&#x5DE5;&#x4F5C;&#x673A;&#x5236;&#x4E0E;next&#x4E00;&#x6837;&#xFF0C;&#x4F46;&#x662F;yield&#x5C06;&#x53D8;&#x6210;&#x80FD;&#x591F;&#x8FD4;&#x56DE;&#x4F20;&#x5165;&#x7684;&#x503C;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x5BA2;&#x6237;&#x7AEF;&#x6539;&#x53D8;&#x5176;&#x884C;&#x4E3A;&#xFF0C;&#x540C;&#x65F6;&#x8FD8;&#x6DFB;&#x52A0;&#x4E86;throw&#x548C;close&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x4EE5;&#x5B8C;&#x6210;&#x8BE5;&#x884C;&#x4E3A;&#x3002;&#x5B83;&#x4EEC;&#x5411;&#x751F;&#x6210;&#x5668;&#x629B;&#x51FA;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#xFF1A; throw&#x5141;&#x8BB8;&#x5BA2;&#x6237;&#x7AEF;&#x4EE3;&#x7801;&#x4F20;&#x5165;&#x8981;&#x629B;&#x51FA;&#x7684;&#x4EFB;&#x4F55;&#x7C7B;&#x578B;&#x7684;&#x5F02;&#x5E38; close&#x7684;&#x5DE5;&#x4F5C;&#x65B9;&#x5F0F;&#x662F;&#x76F8;&#x540C;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5C06;&#x4F1A;&#x629B;&#x51FA;&#x4E00;&#x4E2A;&#x7279;&#x5B9A;&#x7684;&#x5F02;&#x5E38;&#x2013;GeneratorExit&#xFF0C;&#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x751F;&#x6210;&#x5668;&#x5FC5;&#x987B;&#x518D;&#x6B21;&#x629B;&#x51FA;GeneratorExit&#x6216;StopIteration&#x5F02;&#x5E38; finally&#x90E8;&#x5206;&#x5728;&#x4E4B;&#x524D;&#x7684;&#x7248;&#x672C;&#x4E2D;&#x662F;&#x4E0D;&#x5141;&#x8BB8;&#x4F7F;&#x7528;&#x7684;&#xFF0C;&#x5B83;&#x5C06;&#x6355;&#x83B7;&#x4EFB;&#x4F55;&#x672A;&#x88AB; &#x6355;&#x83B7;&#x7684;close&#x548C;throw&#x8C03;&#x7528;&#xFF0C;&#x662F;&#x5B8C;&#x6210;&#x6E05;&#x7406;&#x5DE5;&#x4F5C;&#x7684;&#x63A8;&#x8350;&#x65B9;&#x5F0F; &#x534F;&#x540C;&#x7A0B;&#x5E8F;(coroutine)&#x534F;&#x540C;&#x7A0B;&#x5E8F;&#x662F;&#x53EF;&#x4EE5;&#x6302;&#x8D77;&#xFF0C;&#x6062;&#x590D;&#xFF0C;&#x5E76;&#x4E14;&#x6709;&#x591A;&#x4E2A;&#x8FDB;&#x5165;&#x70B9;&#x7684;&#x51FD;&#x6570;&#x3002; &#x751F;&#x6210;&#x5668;&#x51E0;&#x4E4E;&#x5C31;&#x662F;&#x534F;&#x540C;&#x7A0B;&#x5E8F;&#xFF0C;&#x6DFB;&#x52A0;send&#xFF0C;throw&#x548C;close&#xFF0C;&#x5176;&#x521D;&#x59CB;&#x610F;&#x56FE;&#x5C31;&#x662F;&#x4E3A;&#x8BE5;&#x8BED;&#x8A00;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x7C7B;&#x4F3C;&#x534F;&#x540C;&#x7A0B;&#x5E8F;&#x7684;&#x7279;&#x6027;&#x3002; PEP342&#x5B9E;&#x4F8B;&#x5316;&#x4E86;&#x751F;&#x6210;&#x5668;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x4E5F;&#x63D0;&#x4F9B;&#x4E86;&#x521B;&#x5EFA;&#x534F;&#x540C;&#x7A0B;&#x5E8F;&#x7684;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#x7684;&#x5B8C;&#x6574;&#x5B9E;&#x4F8B;&#xFF0C;&#x8FD9;&#x4E2A;&#x6A21;&#x5F0F;&#x88AB;&#x79F0;&#x4E3A;Trampoline&#xFF0C;&#x53EF;&#x4EE5;&#x88AB;&#x770B;&#x4F5C;&#x662F;&#x751F;&#x6210;&#x548C;&#x6D88;&#x8D39;&#x6570;&#x636E;&#x7684;&#x534F;&#x540C;&#x7A0B;&#x5E8F;&#x4E4B;&#x95F4;&#x7684;&#x5A92;&#x4ECB;&#x3002;&#x5B83;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#x5C06;&#x534F;&#x540C;&#x7A0B;&#x5E8F;&#x8FDE;&#x63A5;&#x5728;&#x4E00;&#x8D77;&#x3002; &#x5728;PyPI&#x4E2D;&#x7684;multitask&#x6A21;&#x5757;(&#x7528;easy_install multitask&#x5B89;&#x88C5;)&#x5B9E;&#x73B0;&#x4E86;&#x8FD9;&#x4E00;&#x6A21;&#x5F0F;&#xFF0C;&#x4F7F;&#x7528;&#x4E5F;&#x5341;&#x5206;&#x7B80;&#x5355;&#xFF1A; &#x5982;&#xFF1A; 12345678910111213141516import multitaskimport timedef coroutine_1(): for i in range(3): print &apos;c1&apos; yield idef coroutine_2(): for i in range(3): print &apos;c2&apos; yield i&gt;&gt;&gt; multitask.add(coroutine_1())&gt;&gt;&gt; multitask.add(coroutine_2())&gt;&gt;&gt; multitask.run() &#x53E6;&#x4E00;&#x79CD;&#x534F;&#x540C;&#x7A0B;&#x5E8F;&#x7684;&#x5B9E;&#x73B0;&#xFF1A;greenlet &#x751F;&#x6210;&#x5668;&#x8868;&#x8FBE;&#x5F0F;(Genexp)python&#x4E3A;&#x7F16;&#x5199;&#x9488;&#x5BF9;&#x5E8F;&#x5217;&#x7684;&#x7B80;&#x5355;&#x751F;&#x6210;&#x5668;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x5FEB;&#x6377;&#x65B9;&#x5F0F;&#x3002;&#x53EF;&#x4EE5;&#x7528;&#x4E00;&#x79CD;&#x7C7B;&#x4F3C;&#x5217;&#x8868;&#x63A8;&#x5BFC;&#x7684;&#x8BED;&#x6CD5;&#x6765;&#x4EE3;&#x66FF;yield&#x3002;&#x5728;&#x6B64;&#xFF0C;&#x4F7F;&#x7528;&#x5706;&#x62EC;&#x53F7;&#x66FF;&#x4EE3;&#x4E2D;&#x62EC;&#x53F7;&#xFF1A; &#x5982;&#xFF1A; 123iter = (x ** 2 for x in range(10) if x % 2 == 0)for el in iter: print el itertools&#x6A21;&#x5757;islice: &#x7A97;&#x53E3;&#x8FED;&#x4EE3;&#x5668;islice&#x5C06;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x8FD0;&#x884C;&#x5728;&#x5E8F;&#x5217;&#x7684;&#x5B50;&#x5206;&#x7EC4;&#x4E4B;&#x4E0A;&#x7684;&#x8FED;&#x4EE3;&#x5668; &#x5982;&#xFF1A; 12345678910111213def starting_at_five(): value = raw_input().strip() while value != &apos;&apos;: for el in itertools.islice(value.split(), 4, None): yield el value = raw_input().strip()&gt;&gt;&gt; iter = starting_at_five()&gt;&gt;&gt; iter.next()one two three four five six&apos;five&apos;&gt;&gt;&gt; iter.next()&apos;six&apos; &#x5F53;&#x9700;&#x8981;&#x62BD;&#x53D6;&#x4F4D;&#x4E8E;&#x6D41;&#x4E2D;&#x7279;&#x5B9A;&#x4F4D;&#x7F6E;&#x7684;&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;islice&#x3002; tee: &#x5F80;&#x8FD4;&#x5F0F;&#x8FED;&#x4EE3;&#x5668;&#x8FED;&#x4EE3;&#x5668;&#x5C06;&#x6D88;&#x8D39;&#x5176;&#x5904;&#x7406;&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x4F46;&#x5B83;&#x4E0D;&#x4F1A;&#x5F80;&#x56DE;&#x5904;&#x7406;&#x3002;tee&#x63D0;&#x4F9B;&#x4E86;&#x5728;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;&#x4E4B;&#x4E0A;&#x8FD0;&#x884C;&#x591A;&#x4E2A;&#x8FED;&#x4EE3;&#x5668;&#x7684;&#x6A21;&#x5F0F;&#x3002;&#x5982;&#x679C;&#x63D0;&#x4F9B;&#x7B2C;&#x4E00;&#x6B21;&#x8FD0;&#x884C;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5C31;&#x80FD;&#x591F;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x518D;&#x6B21;&#x57FA;&#x4E8E;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x8FD0;&#x884C;&#x3002;&#x4F8B;&#x5982;&#xFF1A;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x7684;&#x8868;&#x5934;&#x53EF;&#x4EE5;&#x5728;&#x8FD0;&#x884C;&#x4E00;&#x4E2A;&#x5904;&#x7406;&#x4E4B;&#x524D;&#x63D0;&#x4F9B;&#x7279;&#x6027;&#x4FE1;&#x606F;&#xFF0C; &#x5982;&#xFF1A; 123456789101112def with_head(iterable, headsize = 1): a, b = itertools.tee(iterable) return list(itertools.islice(a, headsize)), b&gt;&gt;&gt; seq = [1, 2, 3, 4, 5]&gt;&gt;&gt; with_head(seq)([1], &lt;itertools.tee object at 0xb82a28&gt;)&gt;&gt;&gt; with_head(seq, 2)([1, 2], &lt;itertools.tee object at 0xb82ab8&gt;)&gt;&gt;&gt; with_head(seq, 3)([1, 2, 3], &lt;itertools.tee object at 0xb82a28&gt;)&gt;&gt;&gt; with_head(seq, 4)([1, 2, 3, 4], &lt;itertools.tee object at 0xb82ab8&gt;) groupby: uniq&#x8FED;&#x4EE3;&#x5668;&#x7C7B;&#x4F3C;&#x4E8E;unix&#x547D;&#x4EE4;uiq&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x5BF9;&#x6765;&#x81EA;&#x4E00;&#x4E2A;&#x8FED;&#x4EE3;&#x5668;&#x7684;&#x91CD;&#x590D;&#x5143;&#x7D20;&#x8FDB;&#x884C;&#x5206;&#x7EC4;&#x3002;groupby&#x7684;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x5B9E;&#x4F8B;&#x662F;&#x4F7F;&#x7528;RLE&#x6765;&#x538B;&#x7F29;&#x6570;&#x636E;&#xFF0C; &#x5982;&#xFF1A; 12345678910111213from itertools import groupbydef compress(data): return ((len(list(group)), name) for name, group in groupby(data))def decompress(data): return (car * size for size, car in data)&gt;&gt;&gt; list(compress(&apos;get uuuuuup&apos;))[(1, &apos;g&apos;), (1, &apos;e&apos;), (1, &apos;t&apos;), (1, &apos; &apos;), (6, &apos;u&apos;), (1, &apos;p&apos;)]&gt;&gt;&gt; compressed = compress(&apos;get uuuuuup&apos;)&gt;&gt;&gt; &apos;&apos;.join(decompress(compressed))&apos;get uuuuuup&apos; &#x6BCF;&#x5F53;&#x9700;&#x8981;&#x5728;&#x6570;&#x636E;&#x4E0A;&#x5B8C;&#x6210;&#x4E00;&#x4E2A;&#x6458;&#x8981;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;groupby&#x3002;&#x8FD9;&#x65F6;&#x5019;&#x5185;&#x5EFA;&#x7684;sorted&#x51FD;&#x6570;&#x5C31;&#x975E;&#x5E38;&#x6709;&#x7528;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x4F20;&#x5165;&#x7684;&#x6570;&#x636E;&#x4E2D;&#x76F8;&#x4F3C;&#x7684;&#x5143;&#x7D20;&#x76F8;&#x90BB;&#x3002; &#x5176;&#x5B83;&#x51FD;&#x6570; itertools&#x51FD;&#x6570;&#x5B8C;&#x6574;&#x5217;&#x8868; &#x88C5;&#x9970;&#x5668;&#x88C5;&#x9970;&#x5668;&#x539F;&#x59CB;&#x7684;&#x4F7F;&#x7528;&#x573A;&#x666F;&#x662F;&#x53EF;&#x4EE5;&#x5C06;&#x65B9;&#x6CD5;&#x5728;&#x5B9A;&#x4E49;&#x7684;&#x9996;&#x90E8;&#x5C06;&#x5176;&#x5B9A;&#x4E49;&#x4E3A;&#x7C7B;&#x65B9;&#x6CD5;&#x6216;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#x3002;&#x4F7F;&#x7528;&#x4E86;&#x88C5;&#x9970;&#x5668;&#x4EE5;&#x540E;&#xFF0C;&#x5176;&#x8BED;&#x6CD5;&#x66F4;&#x52A0;&#x6D45;&#x663E;&#x6613;&#x61C2;&#x3002; &#x5982;&#x4F55;&#x7F16;&#x5199;&#x88C5;&#x9970;&#x5668; &#x6700;&#x7B80;&#x5355;&#x548C;&#x6700;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x8FD4;&#x56DE;&#x5C01;&#x88C5;&#x539F;&#x59CB;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x4E00;&#x4E2A;&#x5B50;&#x51FD;&#x6570; &#x5E38;&#x89C1;&#x7684;&#x88C5;&#x9970;&#x5668;&#x6A21;&#x5F0F;&#x5305;&#x62EC;&#xFF1A; &#x53C2;&#x6570;&#x68C0;&#x67E5; &#x68C0;&#x67E5;&#x51FD;&#x6570;&#x63A5;&#x6536;&#x6216;&#x8FD4;&#x56DE;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5728;&#x7279;&#x5B9A;&#x4E0A;&#x4E0B;&#x6587;&#x6267;&#x884C;&#x65F6;&#x53EF;&#x80FD;&#x6709;&#x7528;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x901A;&#x8FC7;XML-RPC&#x8C03;&#x7528;&#xFF0C;python&#x5C06;&#x4E0D;&#x80FD;&#x548C;&#x9759;&#x6001;&#x7C7B;&#x578B;&#x8BED;&#x8A00;&#x4E2D;&#x4E00;&#x6837;&#x76F4;&#x63A5;&#x63D0;&#x4F9B;&#x5B83;&#x7684;&#x5B8C;&#x6574;&#x7B7E;&#x540D;&#x3002;&#x5F53;XML-RPC&#x5BA2;&#x6237;&#x8981;&#x6C42;&#x51FD;&#x6570;&#x7B7E;&#x540D;&#x65F6;&#xFF0C;&#x5C31;&#x8981;&#x8FD9;&#x4E2A;&#x529F;&#x80FD;&#x6765;&#x63D0;&#x4F9B;&#x5185;&#x7701;&#x80FD;&#x529B;&#x3002; &#x7F13;&#x5B58; TODO &#x4EE3;&#x7406; TODO &#x4E0A;&#x4E0B;&#x6587;&#x63D0;&#x4F9B;&#x8005; &#x4E0A;&#x4E0B;&#x6587;&#x88C5;&#x9970;&#x5668;&#x7528;&#x6765;&#x786E;&#x4FDD;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x8FD0;&#x884C;&#x5728;&#x6B63;&#x786E;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#xFF0C;&#x6216;&#x8005;&#x5728;&#x51FD;&#x6570;&#x524D;&#x540E;&#x6267;&#x884C;&#x4E00;&#x4E9B;&#x4EE3;&#x7801;&#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x8BBE;&#x7F6E;&#x6216;&#x590D;&#x4F4D;&#x7279;&#x5B9A;&#x7684;&#x6267;&#x884C;&#x73AF;&#x5883;&#x3002; &#x5982;&#xFF1A;&#x5F53;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x9879;&#x5FC5;&#x987B;&#x4E0E;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x5171;&#x4EAB;&#x65F6;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x7528;&#x4E00;&#x4E2A;&#x9501;&#x6765;&#x786E;&#x4FDD;&#x5B83;&#x5728;&#x591A;&#x91CD;&#x8BBF;&#x95EE;&#x65F6;&#x5F97;&#x5230;&#x4FDD;&#x62A4;&#x3002;&#x8FD9;&#x4E2A;&#x9501;&#x53EF;&#x4EE5;&#x5728;&#x88C5;&#x9970;&#x5668;&#x4E2D;&#x7F16;&#x5199;&#xFF0C;&#x793A;&#x4F8B;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314from threading import RLocklock = RLock()def synchronized(function): def _synchronized(*args, **kw): lock.acquire() try: return function(*args, **kw) finally: lock.release() return _synchronized@lockerdef thread_safe(): pass &#x4E0A;&#x4E0B;&#x6587;&#x88C5;&#x9970;&#x5668;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;with&#x8BED;&#x53E5;&#x6765;&#x66FF;&#x4EE3;&#xFF0C;&#x521B;&#x9020;&#x8FD9;&#x6761;&#x8BED;&#x53E5;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x4F7F;try&#x2026;finally&#x6A21;&#x5F0F;&#x66F4;&#x52A0;&#x6D41;&#x7545;&#xFF0C;&#x5728;&#x67D0;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5B83;&#x8986;&#x76D6;&#x4E86;&#x4E0A;&#x4E0B;&#x6587;&#x88C5;&#x9970;&#x5668;&#x7684;&#x4F7F;&#x7528;&#x573A;&#x666F;&#x3002; python&#x88C5;&#x9970;&#x5668;&#x5B66;&#x4E60; with&#x548C;contextlib&#x5BF9;&#x4E8E;&#x8981;&#x786E;&#x4FDD;&#x5373;&#x4F7F;&#x53D1;&#x751F;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#x65F6;&#x4E5F;&#x80FD;&#x8FD0;&#x884C;&#x4E00;&#x4E9B;&#x6E05;&#x7406;&#x4EE3;&#x7801;&#x800C;&#x8A00;&#xFF0C;try&#x2026;finally&#x8BED;&#x53E5;&#x662F;&#x5F88;&#x6709;&#x7528;&#x7684;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; &#x5173;&#x95ED;&#x4E00;&#x4E2A;&#x6587;&#x4EF6; &#x91CA;&#x653E;&#x4E00;&#x4E2A;&#x9501; &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;&#x7684;&#x4EE3;&#x7801;&#x8865;&#x4E01; &#x5728;&#x7279;&#x6B8A;&#x73AF;&#x5883;&#x4E2D;&#x8FD0;&#x884C;&#x53D7;&#x4FDD;&#x62A4;&#x7684;&#x4EE3;&#x7801; with&#x8BED;&#x53E5;&#x8986;&#x76D6;&#x4E86;&#x8FD9;&#x4E9B;&#x4F7F;&#x7528;&#x573A;&#x666F;&#xFF0C;&#x4E3A;&#x5728;&#x4E00;&#x4E2A;&#x4EE3;&#x7801;&#x5757;&#x524D;&#x540E;&#x8C03;&#x7528;&#x4E00;&#x4E9B;&#x4EE3;&#x7801;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5; &#x5982;&#xFF1A; 123456def readfile(): with file(&apos;/etc/hosts&apos;) as source_file: for line in source_file: if line.startswith(&apos;#&apos;): continue print line contextlib&#x6A21;&#x5757;&#x672A;&#x6765;&#x7ED9;with&#x8BED;&#x53E5;&#x63D0;&#x4F9B;&#x4E00;&#x4E9B;&#x8F85;&#x52A9;&#x7C7B;&#xFF0C;&#x6807;&#x51C6;&#x7A0B;&#x5E8F;&#x5E93;&#x4E2D;&#x6DFB;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x3002;&#x6700;&#x6709;&#x7528;&#x7684;&#x8F85;&#x52A9;&#x7C7B;&#x662F;contextmanager&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x88C5;&#x9970;&#x5668;&#xFF0C;&#x5B83;&#x589E;&#x5F3A;&#x4E86;&#x5305;&#x542B;&#x4EE5;yield&#x8BED;&#x53E5;&#x5206;&#x5F00;&#x7684;__enter__&#x548C;__exit__&#x4E24;&#x90E8;&#x5206;&#x7684;&#x751F;&#x6210;&#x5668;&#x3002; &#x53C2;&#x8003;&#x8D44;&#x6599;Python&#x5728;&#x7EBF;&#x6559;&#x7A0B; &#x6837;&#x5F0F;&#x6307;&#x5357;","raw":null,"content":null,"categories":[{"name":"Python","slug":"Python","permalink":"https://zealoussnow.github.io/categories/Python/"}],"tags":[{"name":"Python高级编程","slug":"Python高级编程","permalink":"https://zealoussnow.github.io/tags/Python高级编程/"}]},{"title":"Electron快速入门","slug":"electron-quick-start","date":"2016-04-28T03:36:43.000Z","updated":"2016-04-28T08:50:40.121Z","comments":true,"path":"2016/04/28/electron-quick-start/","link":"","permalink":"https://zealoussnow.github.io/2016/04/28/electron-quick-start/","excerpt":"Electron&#x7B80;&#x4ECB;Electron&#x662F;&#x4E00;&#x79CD;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7F51;&#x9875;&#x6280;&#x672F;&#x6765;&#x5F00;&#x53D1;&#x8DE8;&#x5E73;&#x53F0;&#x684C;&#x9762;&#x5E94;&#x7528;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x7528;html&#xFF0C;css&#x548C;js&#x5C31;&#x53EF;&#x4EE5;&#x5199;&#x684C;&#x9762;&#x5E94;&#x7528;&#x3002;","keywords":null,"text":"Electron&#x7B80;&#x4ECB;Electron&#x662F;&#x4E00;&#x79CD;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7F51;&#x9875;&#x6280;&#x672F;&#x6765;&#x5F00;&#x53D1;&#x8DE8;&#x5E73;&#x53F0;&#x684C;&#x9762;&#x5E94;&#x7528;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x7528;html&#xFF0C;css&#x548C;js&#x5C31;&#x53EF;&#x4EE5;&#x5199;&#x684C;&#x9762;&#x5E94;&#x7528;&#x3002; &#x5B89;&#x88C5;cnpm&#x5B89;&#x88C5;&#x597D;&#x4E86;nodejs&#x548C;npm&#x4E4B;&#x540E;&#xFF0C;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x5728;&#x56FD;&#x5185;&#x4E0B;&#x8F7D;npm&#x5305;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6DD8;&#x5B9D;&#x7684;npm&#x955C;&#x50CF; &#x9996;&#x5148;&#x5B89;&#x88C5;cnpm 1npm install -g cnpm --registry=https://registry.npm.taobao.org &#x5B89;&#x88C5;electron1cnpm install electron-prebuilt -g &#x8FD0;&#x884C;&#x5B98;&#x65B9;&#x793A;&#x4F8B;electron-quick-start1234git clone https://github.com/electron/electron-quick-startcd electron-quick-startnpm installnpm start &#x8FD0;&#x884C;&#x7ED3;&#x679C;&#x5982;&#x56FE;&#x6240;&#x793A;&#xFF1A;","raw":null,"content":null,"categories":[{"name":"Nodejs","slug":"Nodejs","permalink":"https://zealoussnow.github.io/categories/Nodejs/"}],"tags":[{"name":"Electron","slug":"Electron","permalink":"https://zealoussnow.github.io/tags/Electron/"}]}]}